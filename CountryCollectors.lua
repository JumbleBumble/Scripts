

return(function(qN,KN,zN,HN,oN,gN,DN,ON,BN,XN,FN,AN,MN,TN,IN,lN,vN,jN,kN,UN,GN,sN,SN,xN,bN,WN,QN,eN,uN,CN,ZN,hN,aN,NN,yN,wN,m,...)local c=(vN);local N,S,U=TN.lshift,2^52,(TN.bor);local I,B,z=IN.gsub,ON,(zN.insert);local Z,r,V,Y,v,T=rawget,ZN,hN,wN,GN,(setmetatable);local YN=(0x0001);local o=string.char;local a,P,G=nil,nil,(nil);local i=oN;local Q,E,f=getfenv,tostring,(BN);while YN~=0X003 do if not(YN<=0)then if YN==1 then a=FN;YN=0X0000;continue;else G=CN.wrap;do YN=3;end;continue;end;else P={[0X0006]=kN,[9]=aN,[uN]=-1715627388,[0X06]=0.1133965537973467,[5]=-203849150,[0X3]=0X4,[0X05]=1848182587,[0X6]=3,[5]=0X6,[0X2]=0.561117182174164,[QN]=0X0001,[QN]=6,[0X6]=XN,[0]=2,[uN]=7,[0X9]=QN,[0]=8,[6]=0};do YN=0X2;end;end;end;YN=0;local F,w=nil,(nil);while YN~=0X2 do do if YN==0X0 then do F=CN.yield;end;YN=1;do continue;end;else w=qN;do YN=0X00002;end;continue;end;end;end;local d,q,X,O,dN,C,D,g,y,k,e,s,M=nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,nil,(nil);local u=setfenv;for Kj=0,14 do if Kj<=6 then if Kj<=2 then if not(Kj<=0X0)then if Kj==0X1 then q=yN;else X=Q();continue;end;else d=DN;continue;end;else do if Kj<=4 then if Kj==3 then O=eN;continue;else end;else do if Kj~=0X05 then do C=0X001;end;continue;else dN={};continue;end;end;end;end;end;else do if Kj<=0Xa then do if Kj<=0x8 then if Kj~=7 then g=0X80000000;else continue;end;else if Kj==0X9 then q=I(f(q,0X005),"..",function(c4)do if v(c4,0x2)==72 then local EH=(1);repeat if EH~=0X0 then D=d(f(c4,0x1,1));do EH=0X0;end;continue;else return"";end;until(false);else local MI=(0);local uI=nil;while(true)do do if MI~=0 then if D then local rb=(0X00001);local Cb=(nil);do while(true)do if rb<=0X0 then return Cb;else if rb~=1 then do D=nil;end;rb=0X0;else Cb=B(uI,D);rb=2;end;end;end;end;else return uI;end;break;else uI=o(d(c4,0X10));MI=0X1;end;end;end;end;end;end);else do y=function()local cr=1;local Tr=nil;do while(true)do if cr<=0X0 then do C=C+1;end;cr=0X2;continue;else do if cr~=1 then return Tr;else Tr=v(q,C,C);do cr=0X00;end;end;end;end;end;end;end;end;continue;end;end;end;else if not(Kj<=0xc)then if Kj==13 then s=SN;else M=g-0X0001;end;else if Kj~=0X000B then e=function()local Oi=(1);local qi,pi=nil,nil;repeat if not(Oi<=0x0)then if Oi~=1 then C=pi;Oi=0;continue;else qi,pi=a(sN,q,C);Oi=2;continue;end;else return qi;end;until(false);end;else k=gN;do continue;end;end;end;end;end;end;end;local l=bit32.bxor;local b=s-0X00001;YN=0x1;local H=nil;while YN<0X2 do if YN==0 then do local RN,PN=1,(nil);do repeat do if RN~=0X0 then PN=2;RN=0X0;do continue;end;else for sK=1,0X1F do local cK=0X1;do while cK<2 do if cK~=0X0 then H[sK]=PN;cK=0X0;else PN=PN*2;do cK=2;end;continue;end;end;end;end;break;end;end;until false;end;end;YN=0X2;else do H={[0]=bN};end;do YN=0X000;end;end;end;local x=(function()local aZ,CZ=nil,nil;local UZ=(0X001);do repeat if UZ<=0 then return aZ;else if UZ~=1 then C=CZ;UZ=0;do continue;end;else aZ,CZ=a("<i8",q,C);UZ=0X2;continue;end;end;until false;end;end);local K,W=nil,nil;local A=(function(ds,Ks,Ss)local os,Xs=2,(nil);repeat if not(os<=0)then if os~=1 then Xs=(ds/H[Ks])%H[Ss];os=0;else return Xs;end;else Xs=Xs-Xs%0X00001;os=1;end;until false;end);do for XI=0X00,0X0001 do if XI==0 then K=MN;else W=HN;continue;end;end;end;local j=function()local k3,B3=nil,(nil);local n3=(0X0);repeat if n3<=0X00 then k3,B3=a("<d",q,C);do n3=0x2;end;else if n3==0X00001 then return k3;else C=B3;n3=0X1;end;end;until(false);end;local t={AN,2,3};local J=function()local uo,so=0,0;repeat local E2=v(q,C,C);C=C+0X01;so=U(so,N(K(E2,127),uo));if K(E2,0X80)==0 then return so;end;do uo=uo+0X0007;end;until false;end;local p=(y());local R=(function()local fd=J();do if fd>M then return fd-s;end;end;do return fd;end;end);local mN=y();do YN=0;end;local rN,nN,iN,LN,cN,EN=nil,nil,nil,nil,nil,(nil);while YN<=0X6 do if YN<=2 then if YN<=0 then rN=function(Oz)local Mz=(3);local nz,Wz,Nz,dz=nil,nil,nil,nil;while Mz<=3 do if Mz<=0X00001 then if Mz==0 then Nz=l(nz[2],mN);Mz=1;else dz=l(nz[3],mN);Mz=0x4;end;else if Mz==2 then Wz=l(nz[0X0001],mN);Mz=0;else nz={v(q,C,C+3)};do Mz=2;end;end;end;end;local yz=l(nz[4],mN);mN=(0X4D*mN+Oz)%256;do C=C+4;end;return yz*0X1000000+dz*65536+Nz*256+Wz;end;YN=6;elseif YN~=1 then YN=0X5;continue;else do LN={};end;do YN=0X4;end;continue;end;else if YN<=4 then if YN~=3 then do cN=function(Lq)local zq,Yq=nil,nil;do for HZ=0X0,0X2 do if HZ<=0X000 then zq=e();else do if HZ==1 then Yq="";else do for Cw=0x1,zq,xN do local Zw=(Cw+0x1f3D-1);if Zw>zq then do Zw=zq;end;end;local Nw=({v(q,C+Cw-bN,C+Zw-0X00001)});for AM=0X1,#Nw do for Tk=0,0x1 do do if Tk==0X00 then do(Nw)[AM]=l(Nw[AM],p);end;else do p=(Lq*p+0X79)%jN;end;do continue;end;end;end;end;end;Yq=Yq..o(k(Nw));end;end;continue;end;end;end;end;end;local vq=(1);repeat do if vq~=0x00000 then C=C+zq;vq=0;do continue;end;else return Yq;end;end;until false;end;end;YN=2;else do iN=0X1;end;YN=0X001;continue;end;else if YN==0X5 then function EN(TI,pI,dI)local jI=dI[0X1];local cI=dI[6];local zI=(dI[2]);local BI=(dI[4]);local HI,nI=dI[0X0003],dI[0X9];local II=(dI[0X7]);local eI=(T({},{__mode='\118'}));local MI,EI=dI[0X005],nil;EI=function(...)local Bc={};local cc=1;local kc=(Q());local Cc={[2]=Bc,[0x1]=dI};local bc,hc=nN(...);do bc=bc-0x01;end;do for Ja=0,bc do if zI>Ja then(Bc)[Ja]=hc[Ja+0X001];else do break;end;end;end;end;local Zc=(kc==X and TI or kc);if not cI then do hc=nil;end;else if not(jI)then else(Bc)[zI]={n=bc>=zI and bc-zI+1 or 0x0000,k(hc,zI+0X1,bc+0X01)};end;end;do if Zc~=kc then u(EI,Zc);end;end;local Jc=0X0;do repeat local og=BI[cc];local jg=(og[0x01]);cc=cc+1;if jg>=0x2D then if not(jg<68)then if not(jg<79)then do if not(jg<0X00055)then if not(jg<0X58)then if jg>=89 then do if jg==0X5A then local GD=Bc[og[0x02]]/Bc[og[0X00005]];Bc[og[3]]=GD-GD%0X1;else local he,Ze=og[3],(Bc[og[0x2]]);Bc[he+1]=Ze;Bc[he]=Ze[og[0X0006]];end;end;else if og[5]~=26 then repeat local Nd,wd=eI,(Bc);do if#Nd>0x0 then local Le=({});for gf,Bf in w,Nd do for Fu,Xu in w,Bf do if Xu[0x1]==wd and Xu[0X2]>=0X0 then local bD=(Xu[2]);do if not Le[bD]then do Le[bD]={wd[bD]};end;end;end;do Xu[0X01]=Le[bD];end;Xu[0X2]=0X1;end;end;end;end;end;until true;return k(Bc,og[0X3],Jc);else cc=cc-1;BI[cc]={[3]=(og[0X3]-252),[2]=(og[0X00002]-252),[1]=54};end;end;else if jg>=86 then if jg==87 then Bc[og[3]]=Bc[og[2]]+Bc[og[5]];else Bc[og[0X03]]=Bc[og[0X2]]%og[0X6];end;else do if og[0X5]~=0x016 then do(Bc)[og[3]]=-Bc[og[2]];end;else cc=cc-1;(BI)[cc]={[0X2]=(og[2]-0x09F),[3]=(og[3]-0X9F),[0X1]=26};end;end;end;end;else if not(jg>=0X052)then if not(jg>=0X0050)then do if not(not(Bc[og[0X2]]<=og[6]))then else cc=og[3];end;end;else if jg~=0X000051 then do Bc[og[3]]={};end;else Bc[og[3]]=Bc[og[0X0002]][og[6]];end;end;else if not(jg>=83)then local vT=(og[0X002]);local nT=(Bc[vT]);for Qb=vT+0x1,og[0x00005]do nT=nT..Bc[Qb];end;(Bc)[og[0X03]]=nT;else if jg~=84 then do if og[0x5]==35 then cc=cc-0X1;do(BI)[cc]={[3]=(og[3]-0x058),[2]=(og[0X02]-0X0058),[0X1]=54};end;elseif og[0X00005]~=206 then local Db,Zb=bc-zI,(og[3]);if not(Db<0X0)then else Db=-0X01;end;for lC=Zb,Zb+Db do(Bc)[lC]=hc[zI+(lC-Zb)+1];end;Jc=Zb+Db;else do cc=cc-0X001;end;(BI)[cc]={[0X001]=0X2,[0X2]=(og[0x2]-0X002e),[3]=(og[0X003]-46)};end;end;else Bc[og[3]]=Zc[og[0X00007]];end;end;end;end;end;else do if not(jg<0x000049)then if not(jg>=0X4c)then if not(jg>=74)then do if Bc[og[2]]==Bc[og[5]]then cc=og[0X3];end;end;else do if jg==0x4b then(Bc)[og[0X3]]=Bc[og[0X2]]/Bc[og[0X5]];else(Bc)[og[0X00003]]=Y(Bc[og[2]],Bc[og[0X5]]);end;end;end;else if not(jg>=0X4D)then do Bc[og[0X3]]=og[7];end;else if jg==0x4E then Bc[og[3]]=false;else Jc=og[3];(Bc[Jc])();Jc=Jc-0X001;end;end;end;else if jg<0x46 then if jg~=69 then Bc[og[0X3]]=Bc[og[2]]~=Bc[og[5]];else(Bc)[og[3]]=l(Bc[og[2]],Bc[og[5]]);end;else if jg>=71 then if jg~=72 then local wy=og[3];do Jc=wy+og[2]-0x1;end;Bc[wy](k(Bc,wy+0x001,Jc));Jc=wy-0X1;else local HK=(II[og[0X2]]);local hK=nil;local LK=(HK[8]);local cK=(#LK);if cK>0 then hK={};for rp=0X001,cK do local fp=LK[rp];if fp[0x0001]==0 then(hK)[rp-0X1]={Bc,fp[2]};else(hK)[rp-1]=pI[fp[2]];end;end;(z)(eI,hK);end;Bc[og[3]]=EN(Zc,hK,HK);end;else local gI=(og[3]);(Bc[gI])(Bc[gI+0X1],Bc[gI+0X2]);Jc=gI-1;end;end;end;end;end;else do if not(jg<56)then if not(jg>=62)then if not(jg>=59)then do if not(jg>=0X0039)then Bc[og[3]]=N(Bc[og[0X2]],Bc[og[0X05]]);else if jg==58 then do cc=og[0X2];end;else Bc[og[0X3]]=Bc[og[0X02]]>Bc[og[0x5]];end;end;end;else if not(jg<0X3c)then if jg~=61 then local bb=(og[0x3]);local Ob,jb=Bc[bb]();if Ob then(Bc)[bb+1]=jb;do cc=og[0x2];end;end;else(Bc)[og[3]]=Bc[og[2]]~=og[0x0006];end;else(Bc)[og[0X0003]]=Bc[og[0X2]]%Bc[og[5]];end;end;else do if jg>=0x041 then if jg>=0X42 then if jg==0x43 then do(Bc)[og[3]]=Bc[og[2]]>=Bc[og[0X0005]];end;else local tN=og[0X3];(Bc)[tN]=Bc[tN](Bc[tN+1],Bc[tN+0X2]);Jc=tN;end;else Bc[og[3]]=U(Bc[og[2]],Bc[og[0X5]]);end;else if jg>=63 then do if jg==64 then(Bc)[og[0x03]]=Bc[og[0X2]]-Bc[og[0X05]];else local PN=(pI[og[0X2]]);PN[0x1][PN[2]]=Bc[og[0X3]];end;end;else local C_=og[0X03];local k_,f_=Bc[C_]();if k_ then do cc=og[0X02];end;(Bc)[C_+3]=f_;end;end;end;end;end;else if jg>=50 then if not(jg>=53)then if jg<0X33 then(Bc[og[0x003]])[Bc[og[0x2]]]=Bc[og[5]];else if jg==0x34 then if Bc[og[0x002]]==og[6]then do cc=og[0X3];end;end;else if og[5]==0x77 then do cc=cc-0X0001;end;(BI)[cc]={[0X002]=(og[2]-15),[0x1]=0x00030,[3]=(og[0x3]-0XF)};else for RZ=og[0X3],og[2]do(Bc)[RZ]=nil;end;end;end;end;else do if not(jg>=0X000036)then local iP=(og[3]);local hP=((og[0X0005]-0X1)*0X32);local rP=Bc[iP];for xz=1,Jc-iP do do rP[hP+xz]=Bc[iP+xz];end;end;else if jg==55 then local Ix=(og[3]);local zx=G(function(...)F();for WV in...do(F)(true,WV);end;end);(zx)(Bc[Ix],Bc[Ix+0x0001],Bc[Ix+2]);Jc=Ix;do Bc[Ix]=zx;end;do cc=og[0X2];end;else if og[5]==0x52 then cc=cc-0x1;(BI)[cc]={[0X1]=22,[3]=(og[3]-225),[0X0002]=(og[2]-225)};else repeat local Hu,iu=eI,(Bc);do if#Hu>0 then local TW=({});for Qq,hq in w,Hu do do for tX,CX in w,hq do do if CX[0X001]==iu and CX[0X2]>=0X0 then local X2=CX[2];if not(not TW[X2])then else TW[X2]={iu[X2]};end;do CX[0X01]=TW[X2];end;CX[2]=1;end;end;end;end;end;end;end;until true;return;end;end;end;end;end;else if not(jg>=47)then if jg~=0x002e then if Bc[og[0X02]]~=og[0X6]then cc=og[3];end;else do repeat local EY,hY,WY=eI,Bc,og[3];if#EY>0x00 then local Uv=({});for Iy,Ny in w,EY do for Sx,Px in w,Ny do do if not(Px[1]==hY and Px[2]>=WY)then else local OC=Px[0x2];if not Uv[OC]then do Uv[OC]={hY[OC]};end;end;Px[0x001]=Uv[OC];(Px)[0X2]=1;end;end;end;end;end;until true;end;end;else do if jg>=0X000030 then if jg==0X31 then local Hp=(og[0X003]);local Dp=((og[5]-0X1)*0X0032);local Rp=(Bc[Hp]);do for Om=1,og[2]do(Rp)[Dp+Om]=Bc[Hp+Om];end;end;else repeat local pv,Kv=eI,Bc;do if not(#pv>0)then else local Ac={};do for Ni,Hi in w,pv do for LB,UB in w,Hi do if not(UB[1]==Kv and UB[2]>=0)then else local h7=(UB[2]);do if not(not Ac[h7])then else Ac[h7]={Kv[h7]};end;end;(UB)[0X1]=Ac[h7];do UB[2]=0x1;end;end;end;end;end;end;end;until true;local qg=og[3];return k(Bc,qg,qg+og[0X2]-0X2);end;else(Bc)[og[3]]=Cc[og[2]];end;end;end;end;end;end;end;elseif not(jg>=22)then if not(jg>=0X0B)then do if not(jg>=5)then if not(jg<2)then do if not(jg<0x003)then if jg~=0X4 then(Bc)[og[3]]=W(Bc[og[0X2]]);else do if not(Bc[og[2]]<Bc[og[5]])then else do cc=og[0X00003];end;end;end;end;else(Bc)[og[0X3]]=#Bc[og[2]];end;end;else if jg==0X1 then Bc[og[0X3]]=true;else if Bc[og[0X003]]then do cc=og[0x2];end;end;end;end;else do if jg<8 then if not(jg<6)then if jg~=0X00007 then Bc[og[3]]=og[7];else do Bc[og[3]]={k({},1,og[2])};end;end;else(Bc)[og[0x0003]]=Bc[og[2]]*Bc[og[0X00005]];end;else if not(jg>=9)then(Bc[og[3]])[Bc[og[0X2]]]=og[6];else if jg~=10 then local bL=(og[3]);do Bc[bL]=Bc[bL](Bc[bL+1]);end;Jc=bL;else local jo=og[0x03];Bc[jo](k(Bc,jo+0X0001,Jc));Jc=jo-1;end;end;end;end;end;end;else if jg>=16 then if not(jg>=0X13)then do if not(jg<0x000011)then if jg~=18 then Bc[og[3]]=K(Bc[og[2]],Bc[og[5]]);else do if not(Bc[og[0X2]]<=Bc[og[0X5]])then else do cc=og[0X3];end;end;end;end;else local Fq=og[0X3];local Lq=G(function(...)(F)();do for Q3,Z3 in...do(F)(true,Q3,Z3);end;end;end);(Lq)(Bc[Fq],Bc[Fq+1],Bc[Fq+2]);Jc=Fq;Bc[Fq]=Lq;cc=og[2];end;end;else if not(jg>=0X14)then Cc[og[0x00002]]=Bc[og[3]];else do if jg==21 then if og[5]==201 then cc=cc-1;do(BI)[cc]={[0X00003]=(og[0X0003]-0X0f3),[0x2]=(og[0X2]-243),[0X01]=2};end;else do(Bc)[og[3]]=not Bc[og[0x2]];end;end;else Bc[og[0X3]]=Bc[og[2]]==Bc[og[5]];end;end;end;end;else do if jg<13 then if jg==0X000C then local ic=pI[og[2]];do(Bc)[og[3]]=ic[0X0001][ic[2]];end;else if og[5]==0X00005E then cc=cc-0X1;(BI)[cc]={[0x1]=0X30,[0X3]=(og[0X3]-0XD8),[2]=(og[0X2]-216)};else if not Bc[og[3]]then cc=og[2];end;end;end;else if not(jg>=14)then local zv=og[0X2];Bc[og[3]]=Bc[zv]..Bc[zv+0x001];else if jg~=15 then(Bc[og[3]])[og[7]]=Bc[og[5]];else do Bc[og[3]]=Bc[og[2]]<=Bc[og[0x5]];end;end;end;end;end;end;end;else do if not(jg<33)then if jg<0x027 then if not(jg<0X0024)then if jg<0x25 then local tN=og[3];local pN,RN=Bc[tN]();if pN then do for PN=1,og[5]do Bc[tN+PN]=RN[PN];end;end;cc=og[2];end;else do if jg~=38 then if og[5]~=223 then local Iy=(og[0X3]);do for Og=Iy,Iy+(og[2]-0X1)do do(Bc)[Og]=hc[zI+(Og-Iy)+0X00001];end;end;end;else cc=cc-0x001;do(BI)[cc]={[1]=83,[2]=(og[2]-232),[3]=(og[0X3]-232)};end;end;else local tW=(og[0x3]);local LW=G(function(...)F();for XT,mT,kT,VT,lT,hT,nT,iT,QT,pT in...do(F)(true,{XT,mT,kT,VT,lT,hT,nT,iT,QT,pT});end;end);LW(Bc[tW],Bc[tW+1],Bc[tW+2]);Jc=tW;(Bc)[tW]=LW;cc=og[2];end;end;end;else if jg>=0X000022 then do if jg==35 then do Bc[og[3]]=Bc[og[0x2]][Bc[og[5]]];end;else local Gw,Sw=og[0x00003],(og[0x002]);Jc=Gw+Sw-0x001;repeat local ey,ly=eI,(Bc);if#ey>0X000 then local iy={};do for yu,ju in w,ey do for Za,Ia in w,ju do if Ia[0X1]==ly and Ia[2]>=0 then local o_=(Ia[0x002]);do if not iy[o_]then iy[o_]={ly[o_]};end;end;(Ia)[1]=iy[o_];(Ia)[2]=1;end;end;end;end;end;until true;return Bc[Gw](k(Bc,Gw+1,Jc));end;end;else repeat local fk,Bk=eI,Bc;if#fk>0X00 then local GA=({});for zJ,cJ in w,fk do for Hr,Wr in w,cJ do if not(Wr[1]==Bk and Wr[0X2]>=0x0)then else local vC=Wr[2];if not GA[vC]then(GA)[vC]={Bk[vC]};end;Wr[1]=GA[vC];(Wr)[2]=0x0001;end;end;end;end;until true;local LG=og[3];return Bc[LG](k(Bc,LG+0x01,Jc));end;end;else do if jg<42 then do if jg<40 then LN[og[0X002]]=Bc[og[0X3]];else if jg~=0X29 then local zQ=(og[3]);local GQ,MQ,wQ=Bc[zQ]();if not(GQ)then else(Bc)[zQ+1]=MQ;(Bc)[zQ+2]=wQ;cc=og[2];end;else do if Bc[og[0X0002]]==Bc[og[0X0005]]then else cc=og[0X0003];end;end;end;end;end;else if not(jg<43)then do if jg==0x0002C then local TR,DR=og[3],og[2];if DR~=0 then Jc=TR+DR-1;end;local RR,ZR=nil,nil;local MR=(og[5]);do if DR==1 then RR,ZR=nN(Bc[TR]());else do RR,ZR=nN(Bc[TR](k(Bc,TR+0X001,Jc)));end;end;end;if MR~=0X1 then if MR==0X0000 then RR=RR+TR-0X1;Jc=RR;else RR=TR+MR-2;Jc=RR+0X1;end;local a4=0;for hp=TR,RR do do a4=a4+0x1;end;(Bc)[hp]=ZR[a4];end;else do Jc=TR-0X0001;end;end;else local OO=(og[3]);Bc[OO](Bc[OO+1]);Jc=OO-1;end;end;else(Bc)[og[0X00003]]=Bc[og[2]]^Bc[og[0X5]];end;end;end;end;else if jg<0X0001b then if not(jg>=0x00018)then do if jg==0X00017 then(Bc[og[3]])[og[0X7]]=og[6];else(Bc)[og[0X3]]=nil;end;end;else do if not(jg<25)then if jg~=26 then local vI=(og[0X3]);local iI,SI=Bc[vI],Bc[vI+0x00001];local AI=Bc[vI+2];do Bc[vI]=G(function()do for mC=iI,SI,AI do(F)(true,mC);end;end;end);end;cc=og[0X0002];else if og[5]==0x71 then cc=cc-0X0001;do(BI)[cc]={[0X2]=(og[0X0002]-0X49),[0x3]=(og[0X003]-0X0049),[1]=0X0058};end;elseif og[0X5]==16 then cc=cc-1;(BI)[cc]={[0x3]=(og[3]-163),[2]=(og[2]-163),[1]=88};else Bc[og[0x3]]=Bc[og[2]];end;end;else Zc[og[7]]=Bc[og[0X3]];end;end;end;else if jg<0X1E then if jg<28 then repeat local pN,PN=eI,(Bc);if#pN>0 then local eF={};for bm,am in w,pN do for cT,JT in w,am do do if JT[0X00001]==PN and JT[0X2]>=0X0 then local ns=JT[2];if not(not eF[ns])then else do eF[ns]={PN[ns]};end;end;JT[1]=eF[ns];(JT)[2]=1;end;end;end;end;end;until true;return Bc[og[0X3]]();else if jg~=29 then Jc=og[0x3];Bc[Jc]=Bc[Jc]();else(Bc)[og[3]]=LN[og[0X02]];end;end;else if not(jg<0X0001f)then if jg~=32 then Bc[og[3]]=Bc[og[2]]<Bc[og[5]];else local J8=og[0X3];(Bc)[J8]=Bc[J8](k(Bc,J8+0x01,Jc));Jc=J8;end;else if not(Bc[og[0X002]]<=Bc[og[5]])then cc=og[3];end;end;end;end;end;end;end;until false;end;end;(u)(EI,TI);return EI;end;YN=0X7;continue;else do nN=function(...)return c("#",...),{...};end;end;YN=0X003;do continue;end;end;end;end;end;local function VN()local sw,Fw,Nw,Dw,Sw,dw,Aw=nil,nil,nil,nil,nil,nil,(nil);for Ln=0X0,9 do if not(Ln<=0X4)then if Ln<=6 then if Ln==0X5 then Sw=sw[KN];else dw={};end;elseif Ln<=0X7 then Aw=e()-0X3817;continue;else if Ln==0X00008 then for dg=0X0000,Aw-bN do do(Sw)[dg]=VN();end;end;continue;else(sw)[0X13]=e();continue;end;end;else if not(Ln<=1)then if Ln<=2 then do Fw={};end;elseif Ln~=0X3 then Dw={};continue;else Nw=1;continue;end;else if Ln~=0 then sw={lN,nil,lN,{},lN,lN,{},lN,{}};else do continue;end;end;end;end;end;local mw=0;repeat if mw~=0x0 then for p0=1,J()do dw[p0]={y(),J()};end;break;else do(sw)[8]=dw;end;mw=0x1;continue;end;until(false);for l9=0X0,0X1 do do if l9~=0 then do sw[0X005]=J();end;else(sw)[2]=J();continue;end;end;end;local Zw=(sw[4]);local Cw=(e()-0x00013b8F);do mw=0x1;end;local iw=nil;do while mw<=3 do if mw<=0X00001 then if mw==0X0 then do(sw)[16]=e();end;do mw=0x3;end;continue;else for WI=1,Cw do do(Zw)[WI]={[2]=0.13492526559456253,[0X005]=0.2544756691368595,[0X2]=0X141C095d,[7]=y(),[0X2]=aN,[4]=0.4693459210921097,[5]=R(),[4]=0.43358203678613594,[1]=J(),[2]=R(),[4]=y(),[3]=R(),[0X06]=y()};end;end;mw=0;continue;end;else if mw~=2 then iw=y();mw=0x2;else(sw)[6]=A(iw,0X1,bN)~=0X00;do mw=4;end;continue;end;end;end;end;do sw[0X1]=A(iw,0X0002,0X1)~=0;end;mw=2;local Bw,jw,Hw=nil,nil,(nil);repeat if not(mw<=0X0003)then if not(mw<=5)then do if mw==6 then jw=y();mw=5;else Bw=e()-0X154e3;mw=6;continue;end;end;else do if mw~=0X4 then Hw=y()~=0;mw=0X3;continue;else for sp=1,Cw do local jp=nil;do for oK=0,0X00001 do if oK==0x0 then jp=sw[4][sp];else for NS,hS in ipairs(t)do local DS,kS=nil,(nil);local BS=0x2;while BS<=0x2 do if not(BS<=0)then if BS~=0x1 then do DS=P[hS];end;do BS=0X1;end;continue;else kS=jp[DS];do BS=0;end;continue;end;else if kS==0xB then local eI=(Dw[jp[hS]]);local aI=Fw[eI];if not(aI)then else(jp)[DS]=aI[1];local Mw=(aI[0X2]);Mw[#Mw+0X0001]={jp,DS};end;else if kS==14 then do(jp)[hS]=sp+jp[hS]+1;end;end;end;BS=0X3;continue;end;end;end;continue;end;end;end;end;mw=1;end;end;end;else if mw<=0X1 then if mw~=0 then sw[17]=y();mw=8;do continue;end;else do sw[0X0013]=e();end;do mw=7;end;continue;end;else if mw~=2 then for gH=bN,Bw do local XH,ZH,nH=0x0,nil,(nil);while XH<=1 do if XH==0X00 then do ZH=lN;end;XH=0X01;else nH=y();XH=2;end;end;for X7=0,0X01 do if X7~=0x0 then if nH==62 then do ZH=j()+e();end;elseif nH==0Xb9 then ZH=x();else if nH==0Xa5 then ZH=false;elseif nH==94 then do ZH=j();end;elseif nH==192 then ZH=j();elseif nH==0X045 then ZH=x();elseif nH==0X00D5 then ZH=f(cN(jw),y());else if nH==0X0f2 then ZH=x();else if nH==0X1F then do ZH=f(cN(jw),0X3);end;else if nH~=0XdE then else do ZH=true;end;end;end;end;end;end;continue;else(Dw)[gH-0X1]=Nw;end;end;local tH={ZH,{}};Fw[Nw]=tH;do Nw=Nw+1;end;do if Hw then for cs=0,0X1 do do if cs==0X00 then dN[iN]=tH;else iN=iN+1;end;end;end;end;end;end;mw=0X0004;else sw[UN]=J();do mw=0;end;continue;end;end;end;until mw>7;for FB=0X0,0X00003 do if FB<=0x1 then if FB~=0 then do sw[0XD]=e();end;do continue;end;else(sw)[10]=y();end;else if FB~=0x02 then return sw;else sw[13]=y();end;end;end;end;YN=0X002;local fN,L,h=nil,nil,(nil);repeat if YN<=1 then if YN~=0X0 then(LN)[0X02]=dN;do YN=3;end;else L=WN;YN=0X04;end;else if not(YN<=0X0002)then if YN~=0x003 then do h=NN;end;break;else dN=lN;YN=0;continue;end;else do fN=VN();end;YN=0X1;end;end;until false;return EN(X,nil,fN)(...);end)(next,0X7,table,bit32.bnot,pcall,unpack,tonumber,string.rep,string.sub,0.2841598535400994,string.unpack,5,bit32.band,bit32,string,nil,select,0X100,false,0X0003,string.byte,"<I4",0X100000000,0X001F3D,1,type,0X0,string.match,2,coroutine,assert,error,true,rawsetbit32.rshift,{55080,0X70623E4A,0X006Fe89F18,1353418410,387254626,0X60C67B76,677464035,0XE6662D37,0Xa8572Dd},...);