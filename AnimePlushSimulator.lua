

return(function(c2,Z2,t2,l2,p2,a2,o2,B2,e2,A2,E2,y2,X2,M2,b2,H2,x2,w2,Q2,z2,L2,J2,h2,D2,f2,G2,r2,V2,F2,u2,i2,C2,W2,d,...)local O,W,U2,T,A=M2,setmetatable,1,nil,(nil);do repeat if U2==0 then A={[0x0000]=1};U2=0x02;do continue;end;else T=Z2;do U2=0X0;end;end;until U2==0X00002;end;local j=(tostring);U2=0X5;local S,q,Y,H,Z,M,p=nil,nil,nil,nil,nil,nil,(nil);while U2~=7 do if not(U2<=2)then do if not(U2<=4)then if U2~=0X005 then H=string.unpack;U2=0X3;continue;else S=a2;U2=2;continue;end;else do if U2==0X03 then Z=p2;U2=1;continue;else Y=bit32.rshift;U2=0X00006;end;end;end;end;else if U2<=0x000 then p=W2;U2=0x07;else if U2==1 then do M=y2.char;end;U2=0;else q=y2.byte;U2=4;do continue;end;end;end;end;end;U2=1;local E,r,t,U,a,g=nil,nil,nil,nil,nil,(nil);repeat if U2<=0X2 then if not(U2<=0)then if U2~=1 then do U=bit32.bnot;end;U2=4;else E=E2;U2=0X03;continue;end;else g=string.sub;do break;end;end;else do if not(U2<=0x03)then do if U2==0X4 then a=string.gsub;U2=0x0;else t=4294967296;do U2=0X2;end;do continue;end;end;end;else r=G2;U2=5;continue;end;end;end;until false;local B=(unpack);local S2=(function(...)return O("#",...),{...};end);local V=(r2);U2=0;local D,J,u=nil,nil,nil;while U2<0X3 do if U2<=0X0 then D=u2;U2=2;continue;else do if U2~=1 then J=D();U2=0X1;continue;else u=coroutine.wrap;do U2=0x3;end;continue;end;end;end;end;local G,X=rawset,bit32.band;U2=3;local o,x,f,i=nil,nil,nil,nil;repeat do if U2<=1 then do if U2==0x00000 then do U2=0X5;end;do continue;end;else x=x2.yield;U2=4;continue;end;end;else do if not(U2<=0X2)then if U2~=0X3 then U2=2;else o=0X1;do U2=0X1;end;do continue;end;end;else f=B2;U2=0X0;continue;end;end;end;end;until U2>=0x0005;U2=0X0;local j2=nil;repeat do if U2==0 then j2={};U2=0x1;continue;else f=a(g(f,5),'.\.',function(yu)if q(yu,H2)==0x48 then local us=(0x00000);repeat if us==0 then do i=S(g(yu,V2,0x1));end;us=1;continue;else return"";end;until(false);else local Le=M(S(yu,16));do if i then local kT,UT=1,nil;do while true do if kT<=0X00000 then i=D2;do kT=2;end;else do if kT==0X1 then UT=Z(Le,i);do kT=0X0000;end;else return UT;end;end;end;end;end;else return Le;end;end;end;end);break;end;end;until false;local l=(function()local TW=(q(f,o,o));do o=o+1;end;return TW;end);local h=J2;U2=0X0;local F,w,L=nil,nil,nil;while U2~=4 do if not(U2<=0X1)then do if U2==0X0002 then w=0X2^52;U2=1;do continue;end;else do local hK,AK=0X001,(nil);while hK<2 do if hK~=0 then AK=0X2;hK=0;continue;else do for S1=0X1,o2 do for wr=0X0,0x0001 do if wr==0 then(A)[S1]=AK;else AK=AK*0X2;end;end;end;end;hK=2;end;end;end;do U2=0X4;end;continue;end;end;else if U2~=0 then do L=h-V2;end;do U2=0X3;end;else F=function()local KK,vK,SK=0,nil,(nil);while(true)do if KK<=0 then vK,SK=H("<I4",f,o);KK=1;else if KK~=1 then return vK;else o=SK;KK=2;continue;end;end;end;end;U2=0x2;continue;end;end;end;U2=0X1;local e,K2=nil,(nil);do while U2~=0X2 do if U2~=0X0 then e=function()local Iw,iw=H("<i8",f,o);o=iw;return Iw;end;U2=0;else do K2=0X1;end;U2=0X2;end;end;end;local Q,v=t-0X1,(error);local b,C,m,z,P,R,k=nil,nil,nil,nil,nil,nil,(nil);for au=0,6 do do if not(au<=2)then do if au<=4 then if au==0X3 then do z=function()local Jv,Gv,Ev=1,nil,(nil);repeat if not(Jv<=0x0000)then if Jv==1 then do Gv,Ev=H("<d",f,o);end;Jv=0x0;continue;else do return Gv;end;end;else o=Ev;Jv=0X2;end;until(false);end;end;continue;else do P={[1]=F2,[0X00002]=h2,[6]=0.06219913398135102,[t2]=0X0004,[0X6]=6,[1]=5,[0X001]=0.06280539226716819,[0X0009]=1670502256,[0x2]=7,[V2]=0.09051628362735131,[9]=0,[w2]=9,[0X1]=5,[0X5]='\052\055\}+2n5',[1]=4,[5]=Q2};end;continue;end;elseif au==5 then R=function()local lA=0;local wA=(0);while true do local Y2=(q(f,o,o));o=o+1;wA=C(wA,m(X(Y2,0X7f),lA));if X(Y2,128)==0X000 then do return wA;end;end;do lA=lA+0x7;end;end;end;continue;else k=l();end;end;else if not(au<=0)then do if au==0x0001 then C=i2;continue;else do m=l2;end;end;end;else do b=f2;end;continue;end;end;end;end;local I={0X0002,0X3,0X00005};local c,K,d2=nil,nil,(nil);for ec=0,2 do if ec<=0 then c=function(LT,DT,mT)local pT=(nil);local BT=(0X01);repeat if BT==0 then pT=pT-pT%0X1;BT=2;else do pT=(LT/A[DT])%A[mT];end;BT=0;continue;end;until BT>=2;return pT;end;continue;else do if ec==0x001 then K=L2;else do d2=l();end;do continue;end;end;end;end;end;local s2=function(Vu)local iu={q(f,o,o+3)};local du,Iu,ju,Hu=nil,nil,nil,nil;local Xu=3;do while 0.035820757060204045 do if Xu<=0X0002 then if not(Xu<=0)then if Xu==0x1 then Iu=b(iu[2],d2);do Xu=0X5;end;else do return Hu*16777216+ju*65536+Iu*0X100+du;end;end;else do o=o+A2;end;Xu=2;end;elseif Xu<=0X4 then if Xu==3 then du=b(iu[1],d2);do Xu=0X1;end;else do Hu=b(iu[4],d2);end;Xu=0X6;do continue;end;end;else if Xu~=0X0005 then d2=(0x02D*d2+Vu)%0X0000100;Xu=0X0;else ju=b(iu[0X3],d2);Xu=0X4;end;end;end;end;end;local N,T2,y,O2=nil,nil,nil,(nil);for Fk=0,4 do do if Fk<=1 then if Fk~=0X00000 then T2={};else N=function()local I6,V6=0x2,(nil);do repeat do if I6<=0 then return V6;else do if I6~=0X1 then V6=R();I6=0X1;continue;else if not(V6>L)then else return V6-t;end;I6=0;continue;end;end;end;end;until false;end;end;end;else if not(Fk<=0X002)then do if Fk~=0X3 then continue;else O2=function(DB)local yB=F();local KB,uB=0,nil;while KB~=0X2 do do if KB~=0X0 then for F4=1,yB,c2 do local m4=(F4+0X0001f3d-0X00001);if m4>yB then m4=yB;end;local j4=({q(f,o+F4-1,o+m4-1)});local B4=0X0;while B4<=1 do if B4==0X0 then for jW=1,#j4 do local CW=(1);repeat if CW==0 then do k=(DB*k+0XA3)%0X100;end;CW=0X2;continue;else j4[jW]=b(j4[jW],k);do CW=0;end;continue;end;until CW==0x2;end;B4=0X00001;else uB=uB..M(B(j4));do B4=0X2;end;end;end;end;KB=0X00002;else uB=h2;KB=0X1;end;end;end;KB=1;while''do if KB~=0x0 then o=o+yB;KB=0X0000;else return uB;end;end;end;end;end;else y=string.match;continue;end;end;end;end;local v2,g2,q2,s=nil,nil,nil,(nil);do for hu=0,5 do if hu<=0x02 then if hu<=0 then function v2(Kq,kq,bq)local Nq=Kq[6];local Wq,rq=Kq[0X7],Kq[9];local Sq,wq,xq,Cq=Kq[0X1],Kq[0X00004],Kq[8],(Kq[0x3]);local mq=W({},{__mode="v"});local Dq,vq=Kq[2],nil;do vq=function(...)local ms=0;local Ss,us={},(0x001);local is=({[0X01]=Kq,[2]=Ss});local ps=(D());local zs=(ps==J and kq or ps);local Ms,Os=S2(...);Ms=Ms-0X1;for QN=0,Ms do do if not(wq>QN)then break;else Ss[QN]=Os[QN+1];end;end;end;if not Wq then do Os=nil;end;else if rq then(Ss)[wq]={n=Ms>=wq and Ms-wq+0x001 or 0X00,B(Os,wq+0X0001,Ms+1)};end;end;do if zs~=ps then(V)(vq,zs);end;end;local xs,Rs,Ds,Vs=T(function()repeat local of=(Nq[us]);local Of=(of[0X1]);us=us+1;do if Of>=45 then do if not(Of>=0X44)then if not(Of<0X38)then if Of<0X3e then if Of<0x3b then do if Of>=57 then if Of~=0X003a then ms=of[3];do Ss[ms]=Ss[ms]();end;else local f6,j6=of[0x3],(Ss[of[2]]);do(Ss)[f6+0X1]=j6;end;Ss[f6]=j6[of[6]];end;else do if of[5]==0X0000e8 then us=us-1;Nq[us]={[0X00003]=(of[0x3]-129),[0X00002]=(of[0x2]-0x000081),[1]=54};elseif of[0X5]==0Xd then do us=us-1;end;do(Nq)[us]={[2]=(of[0X2]-0x00dA),[3]=(of[0X003]-0XDA),[0X0001]=0X15};end;else(Ss)[of[0x003]]=not Ss[of[0x0002]];end;end;end;end;else if Of<60 then do(Ss)[of[0X00003]]=Ss[of[0X02]]>=Ss[of[5]];end;else do if Of~=61 then(Ss)[of[0X3]]=m(Ss[of[2]],Ss[of[5]]);else do repeat local Yn,an=mq,Ss;if#Yn>0X00000 then local Je=({});for aF,OF in r,Yn do for eV,CV in r,OF do if CV[1]==an and CV[2]>=0x0 then local s0=CV[2];if not Je[s0]then Je[s0]={an[s0]};end;(CV)[1]=Je[s0];do CV[2]=0X1;end;end;end;end;end;until true;end;return;end;end;end;end;else if not(Of>=65)then if Of>=0x03F then if Of~=64 then local LE=of[3];local fE=u(function(...)x();do for re in...do x(true,re);end;end;end);fE(Ss[LE],Ss[LE+1],Ss[LE+2]);ms=LE;(Ss)[LE]=fE;do us=of[0X002];end;else do Ss[of[0X3]]=Ss[of[0x2]][of[6]];end;end;else local tu=of[3];(Ss[tu])(B(Ss,tu+1,ms));ms=tu-1;end;else if not(Of<66)then do if Of~=67 then local vz=bq[of[0X002]];(Ss)[of[3]]=vz[0x1][vz[0x002]];else if Ss[of[2]]~=Ss[of[5]]then us=of[0X3];end;end;end;else local zl=(of[0X003]);(Ss)[zl]=Ss[zl](B(Ss,zl+0X1,ms));do ms=zl;end;end;end;end;else do if not(Of<50)then if Of>=0x035 then if Of>=0x36 then if Of==55 then(Ss)[of[3]]=j2[of[2]];else do Ss[of[0X3]]=-Ss[of[0X2]];end;end;else(Ss[of[0X00003]])[Ss[of[0x2]]]=Ss[of[5]];end;elseif not(Of<51)then if Of==0x34 then Ss[of[3]]=Ss[of[2]]>Ss[of[0X0005]];else if not(Ss[of[2]]<Ss[of[0X5]])then us=of[3];end;end;else(Ss)[of[3]]=nil;end;else if Of>=47 then if Of>=48 then do if Of==49 then Ss[of[3]]=Ss[of[2]]~=Ss[of[0X5]];else do(Ss)[of[3]]=Ss[of[2]][Ss[of[5]]];end;end;end;else local aD=of[0x03];local CD=(u(function(...)x();do for UR,WR in...do x(true,UR,WR);end;end;end));(CD)(Ss[aD],Ss[aD+1],Ss[aD+0X2]);ms=aD;do(Ss)[aD]=CD;end;us=of[0X2];end;else if Of~=46 then local At=(of[0X003]);Ss[At](Ss[At+1]);do ms=At-0X1;end;else us=of[2];end;end;end;end;end;else if Of<0X004F then if not(Of>=0X49)then if not(Of<70)then if not(Of>=71)then ms=of[0X00003];Ss[ms]();do ms=ms-0X1;end;else if Of~=72 then(Ss)[of[0x3]]=Ss[of[2]];else(Ss[of[0x3]])[of[0X7]]=of[6];end;end;elseif Of~=0X45 then if of[0X00005]==252 then us=us-1;(Nq)[us]={[2]=(of[2]-157),[1]=50,[3]=(of[0X3]-0X9D)};elseif of[5]==51 then us=us-1;Nq[us]={[2]=(of[0X00002]-0Xb0),[3]=(of[3]-176),[0X1]=0X0038};elseif of[0X5]==53 then us=us-0X1;Nq[us]={[2]=(of[0x0002]-0X4C),[3]=(of[0X3]-0x0004C),[0x00001]=0X3d};else if not(Ss[of[3]])then else us=of[0X00002];end;end;else if Ss[of[0x02]]==of[0X006]then us=of[0x3];end;end;else do if not(Of<76)then if not(Of<0X4d)then if Of==0x4e then do repeat local jN,GN=mq,Ss;if not(#jN>0x00)then else local Yq=({});for DS,VS in r,jN do for ZT,yT in r,VS do if yT[1]==GN and yT[2]>=0 then local ty=yT[2];if not(not Yq[ty])then else(Yq)[ty]={GN[ty]};end;(yT)[1]=Yq[ty];yT[0x00002]=1;end;end;end;end;until 0X45EB039d;end;return false,of[0X00003],ms;else do if not(Ss[of[0X0002]]<=Ss[of[0X00005]])then else do us=of[0x3];end;end;end;end;else if of[0X0005]==0x00eA then do us=us-1;end;Nq[us]={[0X0003]=(of[3]-0X0f9),[0X02]=(of[0x2]-0Xf9),[0X1]=0X003D};else if of[0x5]~=0x0060 then do if not Ss[of[3]]then us=of[0X2];end;end;else us=us-0X01;Nq[us]={[3]=(of[3]-0X000050),[0X2]=(of[0X2]-80),[1]=0X47};end;end;end;else if not(Of<74)then do if Of==75 then local Lp=(of[0X3]);local Ep,Yp=Ss[Lp]();if not(Ep)then else(Ss)[Lp+1]=Yp;us=of[2];end;else Ss[of[3]]=Ss[of[0X0002]]~=of[6];end;end;else local fy=bq[of[0X00002]];(fy[1])[fy[0X2]]=Ss[of[0X3]];end;end;end;end;else do if Of>=85 then if not(Of<88)then if Of>=0X059 then do if Of~=0X5a then(Ss)[of[0X0003]]=X(Ss[of[0X2]],Ss[of[5]]);else local G5=Sq[of[0X2]];local U5,F5=G5[0x00005],(nil);local a5=#U5;if a5>0X00 then do F5={};end;for et=0X00001,a5 do local Yt=U5[et];if Yt[1]~=0X000 then(F5)[et-0X0001]=bq[Yt[0x2]];else do F5[et-0x00001]={Ss,Yt[2]};end;end;end;(p)(mq,F5);end;Ss[of[0X3]]=v2(G5,zs,F5);end;end;else local c0=(of[3]);Ss[c0](Ss[c0+1],Ss[c0+0X00002]);ms=c0-1;end;else if not(Of<86)then if Of==87 then local jD=(Ss[of[2]]/Ss[of[0x5]]);do(Ss)[of[0X03]]=jD-jD%0X0001;end;else if not(not(Ss[of[2]]<=of[0X6]))then else do us=of[3];end;end;end;else if not(Ss[of[2]]<=Ss[of[0X005]])then us=of[0X3];end;end;end;elseif not(Of>=0X52)then if Of>=80 then if Of==81 then do(Ss)[of[0X3]]=Ss[of[2]]-Ss[of[0X5]];end;else local f3=of[3];ms=f3+of[2]-0x01;(Ss[f3])(B(Ss,f3+1,ms));ms=f3-0x1;end;else do(Ss)[of[3]]={};end;end;else if Of>=0X53 then if Of~=84 then Ss[of[0X0003]]={B({},1,of[2])};else do(zs)[of[0X007]]=Ss[of[0X3]];end;end;else local G0=of[0X3];local U0,F0,K0=Ss[G0],Ss[G0+0X1],(Ss[G0+0X2]);(Ss)[G0]=u(function()for eO=U0,F0,K0 do x(true,eO);end;end);us=of[0x2];end;end;end;end;end;end;else do if Of>=0x16 then if not(Of<0X21)then if not(Of>=39)then if Of<36 then do if Of<0x000022 then repeat local hq,Xq=mq,Ss;if#hq>0 then local r_={};for RZ,VZ in r,hq do for wA,NA in r,VZ do if not(NA[0X1]==Xq and NA[2]>=0X00)then else local xd=(NA[0X2]);if not r_[xd]then(r_)[xd]={Xq[xd]};end;(NA)[0X00001]=r_[xd];NA[2]=0X00001;end;end;end;end;until true;return true,of[0X3],0X0;else if Of==35 then do(Ss)[of[3]]=C(Ss[of[0X2]],Ss[of[5]]);end;else local KO=(of[3]);local dO=(of[0X5]-0x01)*50;local BO=Ss[KO];for cJ=1,of[0X02]do(BO)[dO+cJ]=Ss[KO+cJ];end;end;end;end;else if not(Of<37)then if Of==0x26 then Ss[of[0X003]][Ss[of[2]]]=of[6];else(Ss)[of[0X0003]]=Ss[of[0X2]]==Ss[of[5]];end;else local qX,iX,yX=of[0X3],of[0X02],(of[5]);if iX~=0 then do ms=qX+iX-1;end;end;local rX,WX=nil,(nil);if iX~=0X01 then rX,WX=S2(Ss[qX](B(Ss,qX+0X1,ms)));else do rX,WX=S2(Ss[qX]());end;end;do if yX~=0X1 then if yX==0 then rX=rX+qX-1;ms=rX;else rX=qX+yX-0X02;ms=rX+0X01;end;local Zp=(0);for G6=qX,rX do do Zp=Zp+1;end;do(Ss)[G6]=WX[Zp];end;end;else do ms=qX-1;end;end;end;end;end;else if not(Of>=0X2a)then if Of<40 then Ss[of[3]]=Ss[of[0X2]]+Ss[of[0X5]];else if Of~=41 then local N9=(of[2]);(Ss)[of[3]]=Ss[N9]..Ss[N9+0X1];else Ss[of[3]]=Y(Ss[of[2]],Ss[of[0X5]]);end;end;else if Of<0X2B then local U8=of[0X3];local q8=(u(function(...)(x)();for Gf,Af,pf,Hf,yf,Lf,Pf,qf,Qf,Df in...do(x)(true,{Gf,Af,pf,Hf,yf,Lf,Pf,qf,Qf,Df});end;end));q8(Ss[U8],Ss[U8+1],Ss[U8+2]);ms=U8;Ss[U8]=q8;us=of[2];else if Of==0x00002c then do Ss[of[0X3]]=Ss[of[2]]%of[0X6];end;else Ss[of[0X00003]]=true;end;end;end;end;else do if Of<27 then do if Of>=24 then if Of<25 then Ss[of[3]][of[0X7]]=Ss[of[0X5]];else if Of~=26 then(Ss)[of[0X3]]=b(Ss[of[2]],Ss[of[5]]);else local mJ=of[3];(Ss)[mJ]=Ss[mJ](Ss[mJ+1],Ss[mJ+0X2]);do ms=mJ;end;end;end;else if Of==23 then local KK=of[0X0002];local UK=Ss[KK];for nW=KK+0x1,of[5]do do UK=UK..Ss[nW];end;end;Ss[of[0X3]]=UK;else if Ss[of[0X2]]~=Ss[of[5]]then else us=of[0X3];end;end;end;end;else if Of>=0x1E then if Of<0X1F then do(Ss)[of[0X0003]]=of[7];end;else if Of==0X20 then local j_=(of[0X3]);local P_,o_=Ss[j_]();if P_ then for C8=0X0001,of[5]do(Ss)[j_+C8]=o_[C8];end;do us=of[2];end;end;else local PV=of[0X3];local ZV,dV=Ss[PV]();if not(ZV)then else us=of[0X0002];(Ss)[PV+0X3]=dV;end;end;end;else if not(Of>=28)then if Ss[of[0X2]]==of[6]then else do us=of[0X003];end;end;else if Of==29 then(Ss)[of[0X0003]]=is[of[2]];else for dq=of[0X0003],of[0x00002]do Ss[dq]=nil;end;end;end;end;end;end;end;else if Of<0XB then if not(Of<5)then do if not(Of<8)then if not(Of>=9)then(Ss)[of[3]]=false;else if Of~=10 then Ss[of[0X3]]=of[7];else Ss[of[3]]=U(Ss[of[0X2]]);end;end;else if not(Of<6)then if Of~=0x7 then if of[0x5]==27 then us=us-0x1;(Nq)[us]={[0x1]=0X0002,[0X0003]=(of[3]-10),[0x2]=(of[0X2]-10)};else repeat local iq,Mq=mq,(Ss);if not(#iq>0X00000)then else local Fq=({});do for CR,DR in r,iq do for P2,Y2 in r,DR do do if Y2[0X1]==Mq and Y2[2]>=0 then local j3=Y2[0X2];if not(not Fq[j3])then else(Fq)[j3]={Mq[j3]};end;(Y2)[0X00001]=Fq[j3];Y2[2]=0X1;end;end;end;end;end;end;until true;local FI=of[3];return false,FI,FI+of[0X2]-2;end;else do Ss[of[0X3]]=Ss[of[2]]*Ss[of[5]];end;end;else(Ss)[of[3]]=Ss[of[2]]%Ss[of[0x5]];end;end;end;else do if not(Of>=0X2)then if Of~=0X01 then j2[of[2]]=Ss[of[0x3]];else do repeat local jU,pU=mq,(Ss);do if#jU>0 then local EH=({});for Y_,Z_ in r,jU do for Iw,ww in r,Z_ do if ww[0x001]==pU and ww[0X2]>=0X000 then local eY=ww[0X2];if not(not EH[eY])then else(EH)[eY]={pU[eY]};end;(ww)[1]=EH[eY];do ww[0X2]=0X1;end;end;end;end;end;end;until true;end;local NT=of[0X3];return false,NT,NT;end;else do if Of<3 then if of[0X005]==230 then us=us-1;(Nq)[us]={[0x1]=71,[0X00002]=(of[0x2]-100),[3]=(of[0x3]-100)};else local JC=(of[3]);local YC=Ms-wq;if not(YC<0x0)then else YC=-0X001;end;for ll=JC,JC+YC do(Ss)[ll]=Os[wq+(ll-JC)+1];end;ms=JC+YC;end;else do if Of~=4 then if of[0X5]~=0X1 then do repeat local j6,E6,B6=mq,Ss,of[3];do if not(#j6>0)then else local rb={};do for uX,iX in r,j6 do do for OH,WH in r,iX do do if WH[0X1]==E6 and WH[2]>=B6 then local YR=WH[0x02];if not rb[YR]then rb[YR]={E6[YR]};end;(WH)[1]=rb[YR];WH[0X0002]=1;end;end;end;end;end;end;end;end;until true;end;else us=us-1;(Nq)[us]={[1]=0X47,[3]=(of[3]-0X84),[2]=(of[2]-132)};end;else Ss[of[0X3]]=Ss[of[0X2]]/Ss[of[0x5]];end;end;end;end;end;end;end;else if not(Of>=0X10)then do if not(Of>=13)then do if Of~=12 then(Ss)[of[0X3]]=Ss[of[2]]^Ss[of[0X005]];else if not(Ss[of[0x2]]<Ss[of[5]])then else us=of[0x03];end;end;end;else if not(Of<14)then if Of~=0Xf then Ss[of[3]]=zs[of[0X7]];else local pU=(of[0X00003]);Ss[pU]=Ss[pU](Ss[pU+0X01]);ms=pU;end;else local Eq=of[3];local Fq,Rq,cq=Ss[Eq]();if not(Fq)then else do(Ss)[Eq+0X1]=Rq;end;Ss[Eq+0x2]=cq;do us=of[0x2];end;end;end;end;end;else if Of>=0X13 then do if not(Of<20)then do if Of==21 then do(Ss)[of[3]]=#Ss[of[2]];end;else repeat local vh,uh=mq,Ss;if not(#vh>0)then else local pi=({});for xJ,aJ in r,vh do do for Ia,da in r,aJ do if not(da[0X00001]==uh and da[2]>=0)then else local Jq=da[2];if not(not pi[Jq])then else pi[Jq]={uh[Jq]};end;da[0X01]=pi[Jq];do(da)[2]=1;end;end;end;end;end;end;until true;return true,of[0X03],1;end;end;else Ss[of[0X00003]]=Ss[of[2]]<Ss[of[0X5]];end;end;else do if not(Of<17)then if Of==18 then local h9=(of[3]);local r9=((of[0X5]-0X0001)*0X0032);local n9=Ss[h9];for ou=0x00001,ms-h9 do do(n9)[r9+ou]=Ss[h9+ou];end;end;else if of[0x5]~=0X87 then do Ss[of[3]]=Os[wq+0x1];end;else us=us-1;(Nq)[us]={[1]=6,[0x3]=(of[0X3]-0X98),[2]=(of[0x0002]-0x00098)};end;end;else(Ss)[of[3]]=Ss[of[2]]<=Ss[of[5]];end;end;end;end;end;end;end;end;end;until false;end);if not(xs)then if K(Rs)~="\s\116rin\103"then(v)(Rs,0);else if y(Rs,"at\116\e\mp\116\032to\032y\i\el\d\ a\099\114\111\s\s\ \me\116\097\met\104\o\100\047\C\%\-c\097\l\108\032b\o\117n\da\114y")then return coroutine.yield();end;if not(y(Rs,"\094\046\-\:\%\d\+\:\ "))then v(Rs,0X0);else v("Luraph Script:"..(Cq[us-0X1]or"(internal)")..": "..j(Rs),0x0000);end;end;else if Rs then if Vs~=1 then return Ss[Ds](B(Ss,Ds+1,ms));else return Ss[Ds]();end;else if not(Ds)then else return B(Ss,Ds,Vs);end;end;end;end;end;V(vq,kq);return vq;end;continue;else if hu==1 then function g2()local to=(0X0001);local ko,vo,Go=nil,nil,(nil);do while to<0x00004 do if to<=1 then if to==0X00000 then ko={};to=0x3;else to=0X0;do continue;end;end;elseif to==0X002 then Go={{},D2,{},nil,nil,{},D2,D2,nil};to=0x4;else vo=V2;to=2;end;end;end;local ro=({});for fQ=0,0X1 do do if fQ~=0 then for h5=0X01,R()do(ro)[h5]={l(),R()};end;do continue;end;else(Go)[0X5]=ro;end;end;end;to=0X0;local No=(nil);repeat if not(to<=0x0000)then if to~=1 then No={};to=3;continue;else Go[0x0011]=l();to=0X002;continue;end;else(Go)[12]=F();to=1;continue;end;until to>=3;Go[0XD]=F();local Xo=F()-0X14f7B;to=2;local Io,xo,bo=nil,nil,nil;do while to<=4 do do if not(to<=1)then do if to<=2 then Io=l();to=0X01;else if to~=3 then(Go)[2]=R();to=0X0;do continue;end;else for UF=1,Xo do local HF,iF,TF=nil,nil,nil;local KF=(3);while KF<8 do do if not(KF<=0X003)then if KF<=5 then if KF==0X4 then(No)[vo]=TF;KF=0x6;else if not(xo)then else(T2)[K2]=TF;do K2=K2+0X1;end;end;KF=0X8;end;else if KF~=6 then(ko)[UF-0X001]=vo;KF=1;continue;else vo=vo+0X1;KF=5;end;end;else if KF<=1 then if KF==0X000 then iF=l();KF=0X7;do continue;end;else if iF==45 then do HF=F();end;elseif iF==0X025 then HF=g(O2(Io),z()+F());elseif iF==e2 then HF=g(O2(Io),0X004);elseif iF==102 then do HF=g(O2(Io),0x15);end;elseif iF==0X000024 then HF=g(O2(Io),z()+F());elseif iF==185 then HF=e();elseif iF==98 then HF=e();elseif iF==0x0055 then HF=false;elseif iF==0xDD then HF=g(O2(Io),l());elseif iF==176 then HF=z();elseif iF==0X028 then do HF=g(O2(Io),z()+F());end;elseif iF==78 then do HF=F2;end;elseif iF~=0XD2 then else do HF=F();end;end;do KF=0x2;end;end;else do if KF~=0X02 then do HF=nil;end;KF=0X0;else TF={HF,{}};KF=4;continue;end;end;end;end;end;end;end;do to=4;end;end;end;end;else if to~=0X000 then xo=l()~=0X0;to=3;else bo=F()-96910;do to=0X005;end;continue;end;end;end;end;end;local Ao=Go[V2];to=0;do while'k4\$\048\039fu\105\%'do if to~=0 then(Go)[19]=F();break;else for u1=0x0,bo-1 do(Ao)[u1]=g2();end;to=0X00001;continue;end;end;end;local Zo=nil;for xT=0X0,0X5 do if not(xT<=0x2)then if xT<=0X0003 then Go[11]=F();continue;elseif xT~=4 then for gi=1,Zo do local wi,Qi,oi=nil,nil,(nil);local Zi=0X0;repeat if not(Zi<=0X001)then if Zi==0X00002 then Qi=F();Zi=0X03;continue;else oi=F();Zi=0X1;do continue;end;end;else if Zi~=0x0 then for m2=wi,Qi do do Go[t2][m2]=oi;end;end;do Zi=0X00004;end;continue;else wi=F();Zi=2;end;end;until Zi==0x00004;end;continue;else Zo=F();continue;end;else if xT<=0X0 then(Go)[0X00004]=R();continue;else if xT~=0X01 then Go[13]=F();do continue;end;else Go[0X0012]=l();do continue;end;end;end;end;end;local go=(Go[6]);local uo=(F()-0Xa062);for Z5=0X1,uo do go[Z5]={[4]=l(),[0X3]=N(),[0X00005]=N(),[2]="Y\V\[\^y",[z2]=l(),[6]=l(),[1]=b2,[0X0002]=N(),[0x1]=R()};end;to=0X04;local So=(nil);do while'\E\051\122JB\.'do if not(to<=0X2)then do if not(to<=3)then if to~=0X04 then do(Go)[8]=R();end;break;else do for P9=0X00001,uo do local z9=(Go[6][P9]);do for j6,s6 in X2(I)do local o6,p6,c6=0X1,nil,nil;do while(true)do do if o6~=0X0 then p6=P[s6];do o6=0;end;else do c6=z9[p6];end;break;end;end;end;end;if c6==12 then local IF,HF=nil,nil;for A_=0x0,1 do do if A_~=0x0 then HF=No[IF];continue;else IF=ko[z9[s6]];do continue;end;end;end;end;if not(HF)then else(z9)[p6]=HF[0X1];local Lk=HF[2];(Lk)[#Lk+0X001]={z9,p6};end;elseif c6==0Xb then do(z9)[s6]=P9+z9[s6]+0X001;end;end;end;end;end;end;to=3;do continue;end;end;else(Go)[16]=l();to=1;end;end;else if not(to<=0X00000)then if to~=0x0001 then Go[9]=c(So,0X2,V2)~=0;to=0X5;continue;else So=l();do to=0X00;end;do continue;end;end;else(Go)[z2]=c(So,0X1,0X00001)~=0;to=0X00002;continue;end;end;end;end;do return Go;end;end;else do q2=g2();end;do continue;end;end;end;else do if hu<=0X3 then j2[2]=T2;continue;else do if hu~=0X4 then T2=D2;else s=C2;continue;end;end;end;end;end;end;end;do return v2(q2,J,D2)(...);end;end)(7997,pcall,0X3,bit32.lshift,string.rep,tonumber,0xrawget,string,ipairs,select,'\?',2,coroutine,0X00009,0X6,0X7,type,2147483648,"",nil,bit32.bxor,next,setfenv,1,true,getfenv,bit32.bor,assert,table.insert,{39013,1648857578,3876375034,0Xeb8D653D,1993272879,0x0e4D5fBec,0Xa08E3E1e,0XcB13017e,0Xc064972A},...);
