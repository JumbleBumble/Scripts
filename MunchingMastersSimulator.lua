

do return(function(hs,ns,Ps,is,Vs,Ws,Is,us,Ds,es,As,bs,Es,Bs,Cs,as,qs,ps,xs,Ts,ls,Rs,vs,Fs,ds,s,...)local K,v=Ps,(rawget);local c,l=Es.bor,(next);local Y=(type);local Q,u,g=Ws,4294967296,tostring;local y,H,S=nil,nil,nil;for WL=0x0,2 do if WL<=0 then do y=Fs;end;else if WL==1 then H=string.byte;else S=bs;end;end;end;local r,q=nil,(nil);for U8=0X000,1 do if U8==0 then r=is;else q=vs;end;end;local ks,C,E,m=2,nil,nil,(nil);repeat if not(ks<=0)then if ks~=0X1 then C=1;ks=1;else E=Ts;do ks=0;end;continue;end;else m={[0]=ls};do break;end;end;until false;local W,F,i=nil,nil,nil;for KL=0X0,2 do if KL<=0 then W=hs;continue;else do if KL~=1 then i=Is;continue;else F=string.match;continue;end;end;end;end;local T=rawset;ks=0X00;local h,b=nil,nil;while ks~=0x02 do if ks==0X00 then do h=ps;end;ks=1;else b=table.insert;ks=2;end;end;local p,R=unpack,(setfenv);local V=Vs;local U=Rs;local B=(q());ks=4;local P,x,A,d,e,D,J,k,Z=nil,nil,nil,nil,nil,nil,nil,nil,nil;repeat if ks<=5 then do if ks<=2 then if ks<=0 then xks=0X008;continue;else if ks==1 then D=0X2^Cs;ks=0X0007;continue;else ks=0;do continue;end;end;end;elseif ks<=3 then do d=function()local VR=H(x,C,C);C=C+0X1;do return VR;end;end;end;ks=0X00a;else do if ks==0X4 then P=qs.char;ks=2;continue;else do local QI,eI=0,nil;while(true)do if QI==0 then eI=0X00002;QI=1;continue;else for KM=1,31 do local CM=(0);do repeat if CM==0X00 then m[KM]=eI;CM=0X1;continue;else do eI=eI*2;end;CM=0X002;end;until CM>0X01;end;end;break;end;end;end;do ks=0Xc;end;continue;end;end;end;end;else if ks<=0X008 then if ks<=6 then x=E(S(x,5),'\.\.',function(nq)if H(nq,0X00002)~=0x48 then local ej,dj=0X0,(nil);repeat do if ej==0 then do dj=P(r(nq,16));end;ej=0x1;else do if not(A)then return dj;else local vx,Hx=0X1,(nil);do while(true)do if vx<=0 then do A=Bs;end;vx=2;continue;else if vx==1 then Hx=W(dj,A);vx=0;continue;else return Hx;end;end;end;end;end;end;do break;end;end;end;until(false);else local P7=1;do while(true)do if P7==0x0 then return"";else A=r(S(nq,1,0X1));P7=0X000;end;end;end;end;end);do ks=0x3;end;else if ks==7 then do J=e-0x01;end;ks=9;continue;else ks=0X6;do continue;end;end;end;elseif not(ks<=0X9)then if ks~=0Xa then Z=bit32.lshift;do ks=5;end;else do e=0X080000000;end;ks=0X1;end;else do k=u-1;end;do ks=0Xb;end;do continue;end;end;end;until ks>=12;ks=0x2;local a,j,I=nil,nil,(nil);repeat do if not(ks<=0x0)then if ks==1 then do I=coroutine.yield;end;ks=0X3;continue;else do a=function()local GF,kF=V("<I4",x,C);C=kF;return GF;end;end;ks=0;continue;end;else j=function()local Hc=(0x0);local mc,jc=nil,(nil);repeat if not(Hc<=0)then if Hc~=1 then return mc;else C=jc;Hc=0x02;continue;end;else mc,jc=V("<i8",x,C);Hc=1;continue;end;until false;end;do ks=1;end;end;end;until ks==0X3;local X,G=nil,nil;for Aj=0,1 do do if Aj~=0X0 then G=bit32.band;continue;else X=function()local Qc,Hc=nil,nil;local Tc=(0);do while Tc<2 do do if Tc==0x0 then Qc,Hc=V('\<\100',x,C);Tc=0X1;continue;else C=Hc;Tc=2;continue;end;end;end;end;return Qc;end;end;end;end;ks=1;local z,o,M,f,L=nil,nil,nil,nil,nil;repeat if not(ks<=0X0001)then if ks<=2 then M=xs;ks=3;continue;else if ks~=0X3 then o=function()local sE,cE=0X0,(0X00);repeat local kp=H(x,C,C);C=C+0x0001;sE=c(sE,Z(G(kp,0X7f),cE));do if G(kp,128)~=0X0 then else return sE;end;end;cE=cE+7;until false;end;do ks=0X2;end;else do f={[4]='\069',[0]='\095K\037\{',[2]=0X00007,[0]=0X5,[0x0]=421541575,[0X1]=5,[0X0]=0X00,[4]='\089\078',[3]=ns,[9]=5,[0X4]=ls,[4]=As,[5]=6};end;ks=0X0;continue;end;end;else if ks~=0X0 then z=Es.bnot;do ks=0X4;end;else L=ds;break;end;end;until(false);local O=(function()local g7=nil;for MA=0,2 do if not(MA<=0)then do if MA~=0X1 then return g7;else do if g7>J then do return g7-u;end;end;end;end;end;else g7=o();end;end;end);local N=(d());local ss=d();local Ls=function(Yf)local Uf,nf,Cf,tf=0X0000,nil,nil,nil;do repeat if Uf<=0 then nf={H(x,C,C+0X03)};Uf=0X02;continue;else do if Uf==1 then tf=U(nf[2],ss);Uf=3;else Cf=U(nf[0X1],ss);Uf=1;end;end;end;until Uf>=3;end;local Jf=(U(nf[3],ss));local rf=(U(nf[4],ss));ss=(0X0000bD*ss+Yf)%256;Uf=0X1;do repeat do if Uf==0 then return rf*0X1000000+Jf*65536+tf*0x100+Cf;else do C=C+ns;end;Uf=0x0;end;end;until false;end;end;local rs=(function(...)do return K('\#',...),{...};end;end);local w,gs=function(jE,pE,PE)local cE,xE=0X00,nil;repeat if cE<=0 then do xE=(jE/m[pE])%m[PE];end;cE=0X2;continue;else do if cE~=0x1 then xE=xE-xE%1;cE=1;continue;else return xE;end;end;end;until false;end,{};ks=0;local t,Qs,Ks=nil,nil,(nil);while ks<=2 do if ks<=0X0 then t={1,0X0003,0x02};ks=0x2;else if ks==1 then Ks=function(cy)local Qy=(a());local qy=(nil);local ey=(1);repeat if ey~=0X0 then qy='';do ey=0;end;else for Bt=1,Qy,0X1f3D do local dt=(nil);for u9=0X000,0X1 do do if u9~=0X00 then if dt>Qy then dt=Qy;end;else dt=Bt+0X0001F3d-0x0001;continue;end;end;end;local at=({H(x,C+Bt-0X1,C+dt-1)});for B3=0,1 do if B3==0 then do for vi=0X1,#at do local wi=(0x00);repeat if wi==0X0 then(at)[vi]=U(at[vi],N);wi=1;continue;else N=(cy*N+221)%256;break;end;until(false);end;end;else qy=qy..P(p(at));end;end;end;do ey=2;end;end;until ey>=2;for hw=0,1 do if hw~=0X000 then return qy;else C=C+Qy;continue;end;end;end;ks=0X3;else Qs={};do ks=0X00001;end;continue;end;end;end;local Ys=ls;do ks=0X00000;end;local ys=nil;do while ks<2 do if ks~=0X0 then function ys(dT,vT,cT)local HT,AT=dT[7],dT[9];local rT,OT,TT=dT[0X6],dT[0X1],(dT[4]);local tT=dT[0X0003];local NT=dT[0x8];local ET=i({},{__mode="v"});local aT,LT=dT[2],nil;LT=function(...)local it,Rt=0X1,{};local Nt=q();local pt={[2]=Rt,[1]=dT};local lt=(Nt==B and cT or Nt);local rt,jt=rs(...);rt=rt-1;for RW=0X0,rt do if not(TT>RW)then do break;end;else(Rt)[RW]=jt[RW+1];end;end;local Pt=(0X0);if not HT then jt=nil;else if AT then do(Rt)[TT]={n=rt>=TT and rt-TT+0X1 or 0,p(jt,TT+0X001,rt+1)};end;end;end;if lt~=Nt then(R)(LT,lt);end;local tt,Dt,Et,at=Q(function()do repeat local FB=rT[it];local TB=(FB[6]);do it=it+1;end;if TB<0x02d then if TB>=0X16 then if TB>=0X21 then if TB>=0X0027 then do if not(TB<42)then if not(TB>=43)then Rt[FB[1]]=false;else if TB~=44 then do if Rt[FB[1]]then do it=FB[3];end;end;end;else local gQ=FB[0x1];local SQ=(h(function(...)(I)();for MH in...do I(true,MH);end;end));(SQ)(Rt[gQ],Rt[gQ+0X1],Rt[gQ+2]);Pt=gQ;(Rt)[gQ]=SQ;do it=FB[0X03];end;end;end;else if TB>=0X000028 then if TB==41 then Rt[FB[0X001]]={};else repeat local oG,PG=ET,(Rt);do if not(#oG>0)then else local hO=({});for gM,JM in l,oG do do for J_,T_ in l,JM do if not(T_[1]==PG and T_[2]>=0X0)then else local xe=(T_[2]);if not(not hO[xe])then else hO[xe]={PG[xe]};end;T_[0X001]=hO[xe];T_[2]=0X1;end;end;end;end;end;end;until true;do return true,FB[1],1;end;end;else(Rt)[FB[0X1]]=Rt[FB[3]]%FB[0x7];end;end;end;else if TB>=36 then if TB<0X25 then if Rt[FB[3]]==FB[0X7]then else it=FB[0X1];end;else if TB~=0X26 then if Rt[FB[0X3]]==Rt[FB[0X2]]then else it=FB[0X1];end;else lt[FB[4]]=Rt[FB[1]];end;end;else if TB>=0x022 then if TB==35 then do(Rt[FB[1]])[FB[0X00004]]=Rt[FB[2]];end;else local o2=(OT[FB[3]]);local P2,c2=o2[0x00005],(nil);local d2=#P2;if not(d2>0x000)then else c2={};for ki=1,d2 do local Ji=P2[ki];do if Ji[1]~=0X0 then(c2)[ki-1]=vT[Ji[0X2]];else c2[ki-1]={Rt,Ji[0x2]};end;end;end;(b)(ET,c2);end;Rt[FB[1]]=ys(o2,c2,lt);end;else repeat local qF,hF=ET,Rt;do if not(#qF>0X00000)then else local xU={};for aA,fA in l,qF do do for D7,N7 in l,fA do if N7[1]==hF and N7[2]>=0X0 then local jb=(N7[2]);if not xU[jb]then(xU)[jb]={hF[jb]};end;do N7[0x01]=xU[jb];end;N7[2]=0X001;end;end;end;end;end;end;until true;return;end;end;end;else do if not(TB<27)then if not(TB>=30)then if not(TB<28)then if TB==29 then local PU=vT[FB[3]];PU[1][PU[2]]=Rt[FB[0X01]];else local cH=FB[0x1];local uH,RH=Rt[cH]();if uH then it=FB[0x3];(Rt)[cH+0x03]=RH;end;end;else local xa=(FB[0X1]);Rt[xa](p(Rt,xa+1,Pt));Pt=xa-0X001;end;else if not(TB>=0X1F)then(pt)[FB[0X3]]=Rt[FB[1]];else if TB~=32 then local ju=FB[1];do(Rt)[ju]=Rt[ju](p(Rt,ju+1,Pt));end;Pt=ju;else(Rt)[FB[0x1]]=Rt[FB[3]]*Rt[FB[0X00002]];end;end;end;else if TB>=24 then do if TB>=0X19 then do if TB==0X1A then local hO=(FB[0X0001]);do Pt=hO+FB[3]-1;end;Rt[hO](p(Rt,hO+0X00001,Pt));Pt=hO-1;else local Ms=(vT[FB[3]]);do(Rt)[FB[0X1]]=Ms[0X1][Ms[2]];end;end;end;else repeat local va,qa=ET,Rt;if#va>0 then local TA={};for Uo,Ho in l,va do for Kx,Ax in l,Ho do if not(Ax[0X1]==qa and Ax[2]>=0X00)then else local Mn=(Ax[0X2]);if not(not TA[Mn])then else do(TA)[Mn]={qa[Mn]};end;end;(Ax)[1]=TA[Mn];do Ax[0X2]=0x001;end;end;end;end;end;until true;local GU=FB[0X1];return false,GU,GU+FB[3]-2;end;end;else do if TB~=23 then Rt[FB[0X1]]=Rt[FB[3]][FB[7]];else local BD=FB[0X1];local uD=((FB[2]-0X0001)*50);local yD=(Rt[BD]);for ot=1,FB[0X03]do yD[uD+ot]=Rt[BD+ot];end;end;end;end;end;end;end;elseif not(TB>=11)then if not(TB>=5)then do if TB>=2 then do if TB<3 then(Rt[FB[0X1]])[FB[4]]=FB[7];else if TB==4 then Rt[FB[0X1]]=Rt[FB[3]]<=Rt[FB[0X2]];else local KY,jY=rt-TT,FB[0X0001];do if KY<0X0000 then do KY=-0X1;end;end;end;do for H8=jY,jY+KY do Rt[H8]=jt[TT+(H8-jY)+1];end;end;do Pt=jY+KY;end;end;end;end;else do if TB~=0X1 then Rt[FB[0x1]]=Rt[FB[3]]~=FB[7];else if Rt[FB[3]]<=Rt[FB[0x002]]then it=FB[1];end;end;end;end;end;else do if not(TB<0X8)then do if TB>=9 then if TB==10 then local ZQ=(FB[1]);local kQ=(h(function(...)I();for si,xi,qi,Ui,Ki,Gi,bi,ci,Zi,hi in...do(I)(true,{si,xi,qi,Ui,Ki,Gi,bi,ci,Zi,hi});end;end));(kQ)(Rt[ZQ],Rt[ZQ+1],Rt[ZQ+0x2]);Pt=ZQ;do Rt[ZQ]=kQ;end;it=FB[3];else(Rt)[FB[1]]=FB[0x04];end;else if Rt[FB[3]]~=Rt[FB[2]]then else do it=FB[0x0001];end;end;end;end;else if TB>=0X00006 then if TB==7 then Rt[FB[1]]=Rt[FB[3]]-Rt[FB[0X2]];else do if not(not(Rt[FB[0X3]]<=Rt[FB[2]]))then else it=FB[1];end;end;end;else(Rt)[FB[0x1]]=Rt[FB[3]]>=Rt[FB[0X02]];end;end;end;end;else do if TB>=0X10 then if not(TB<19)then if not(TB<20)then if TB~=0X0015 then for bX=FB[1],FB[3]do do Rt[bX]=nil;end;end;else local EF=(FB[3]);local uF=Rt[EF];for Af=EF+1,FB[2]do do uF=uF..Rt[Af];end;end;(Rt)[FB[0X1]]=uF;end;else local XF=FB[0X1];local CF,QF=Rt[XF+0X0001],(Rt[XF+0x02]);local VF=(Rt[XF]);(Rt)[XF]=h(function()for e4=VF,CF,QF do(I)(true,e4);end;end);it=FB[3];end;else if not(TB>=0X000011)then local zB=(FB[1]);local VB=((FB[2]-1)*50);local dB=Rt[zB];for gO=1,Pt-zB do do dB[VB+gO]=Rt[zB+gO];end;end;else if TB~=18 then do Rt[FB[0X1]]=Rt[FB[3]]^Rt[FB[0X02]];end;else do repeat local zd,Md=ET,(Rt);do if#zd>0X00000 then local mN={};do for Hn,Bn in l,zd do for iJ,GJ in l,Bn do if GJ[1]==Md and GJ[2]>=0X0 then local D1=(GJ[2]);if not mN[D1]then mN[D1]={Md[D1]};end;GJ[1]=mN[D1];GJ[2]=0X001;end;end;end;end;end;end;until true;end;return false,FB[0X1],Pt;end;end;end;else if TB>=13 then if not(TB<0x0E)then do if TB~=0xf then local sZ=FB[1];local nZ=Rt[FB[0X3]];do(Rt)[sZ+1]=nZ;end;(Rt)[sZ]=nZ[FB[7]];else local S9=(FB[1]);for O6=S9,S9+(FB[3]-0X01)do(Rt)[O6]=jt[TT+(O6-S9)+0x1];end;end;end;else(Rt)[FB[1]]=Rt[FB[3]]==Rt[FB[2]];end;else do if TB~=12 then do Rt[FB[1]]=Rt[FB[3]]<Rt[FB[0X002]];end;else local qo=FB[1];local wo=(FB[0X003]);if wo==0 then else Pt=qo+wo-0x0001;end;local Io=FB[0X2];local To,go=nil,(nil);if wo~=1 then To,go=rs(Rt[qo](p(Rt,qo+0X1,Pt)));else To,go=rs(Rt[qo]());end;if Io==0X1 then do Pt=qo-0x0001;end;else do if Io==0 then To=To+qo-0X1;do Pt=To;end;else To=qo+Io-0X2;Pt=To+0x1;end;end;local MW=(0);for QX=qo,To do MW=MW+0X1;do(Rt)[QX]=go[MW];end;end;end;end;end;end;end;end;end;else if TB<0X44 then if not(TB>=56)then if TB<50 then if not(TB<47)then if not(TB>=48)then if not(not(Rt[FB[3]]<=FB[7]))then else it=FB[0X1];end;else do if TB~=49 then local GY=FB[1];local MY,xY=Rt[GY]();do if MY then for Cw=0X0001,FB[0X02]do Rt[GY+Cw]=xY[Cw];end;it=FB[3];end;end;else local q8=FB[1];Pt=q8+FB[0x3]-1;(Rt)[q8]=Rt[q8](p(Rt,q8+0X00001,Pt));Pt=q8;end;end;end;elseif TB~=0X2e then(Rt)[FB[1]]=U(Rt[FB[0X3]],Rt[FB[2]]);else do(Rt[FB[0X001]])[Rt[FB[0x00003]]]=Rt[FB[0x02]];end;end;else if TB<0X000035 then do if not(TB<0X33)then do if TB~=0X34 then do it=FB[0X3];end;else do(Rt)[FB[1]]=Rt[FB[0x3]][Rt[FB[2]]];end;end;end;else(Rt[FB[0X1]])[Rt[FB[0X3]]]=FB[7];end;end;elseif TB<0X36 then local V1=(FB[0x1]);(Rt[V1])(Rt[V1+1],Rt[V1+2]);Pt=V1-0x01;else if TB==0x37 then local DV=FB[0X01];local SV,BV,zV=Rt[DV]();if SV then(Rt)[DV+0X1]=BV;do(Rt)[DV+2]=zV;end;it=FB[3];end;else(Rt)[FB[0X1]]=c(Rt[FB[0X0003]],Rt[FB[2]]);end;end;end;else if TB<62 then if TB<59 then if TB>=0X00039 then if TB~=58 then if not(not(Rt[FB[0X3]]<Rt[FB[2]]))then else it=FB[1];end;else local Rj=Rt[FB[0X3]]/Rt[FB[2]];(Rt)[FB[0X00001]]=Rj-Rj%1;end;else local yp=(FB[1]);(Rt)[yp]=Rt[yp](Rt[yp+1]);Pt=yp;end;else if TB>=0X3c then if TB~=0X3D then if Rt[FB[0X03]]==FB[0X7]then it=FB[1];end;else(Rt)[FB[1]]=Rt[FB[3]];end;else if FB[0x2]==102 then it=it-1;do(rT)[it]={[0X3]=(FB[3]-72),[0X6]=0x5a,[1]=(FB[0x1]-72)};end;else if FB[2]~=0X084 then Rt[FB[1]]=not Rt[FB[0X3]];else it=it-1;do rT[it]={[6]=0X051,[0X3]=(FB[3]-0Xa6),[0x001]=(FB[0X1]-166)};end;end;end;end;end;else do if not(TB<0X41)then if TB<66 then local Nq=FB[0x1];local Oq,bq=Rt[Nq]();if Oq then Rt[Nq+0x1]=bq;it=FB[0X3];end;else if TB~=67 then(gs)[FB[0X3]]=Rt[FB[0x1]];else repeat local jw,cw=ET,(Rt);if not(#jw>0)then else local zA=({});for EN,cN in l,jw do do for Sw,Bw in l,cN do if not(Bw[1]==cw and Bw[2]>=0X0000)then else local cJ=Bw[2];if not(not zA[cJ])then else zA[cJ]={cw[cJ]};end;do Bw[1]=zA[cJ];end;Bw[0X2]=0X001;end;end;end;end;end;until true;return true,FB[1],0;end;end;elseif TB>=0x3f then if TB~=0x40 then local ej=FB[1];local nj=(h(function(...)(I)();for WH,QH in...do(I)(true,WH,QH);end;end));(nj)(Rt[ej],Rt[ej+0X001],Rt[ej+2]);do Pt=ej;end;Rt[ej]=nj;do it=FB[3];end;else Rt[FB[1]]=Rt[FB[0X3]]>Rt[FB[0x2]];end;else Rt[FB[1]]=nil;end;end;end;end;else do if not(TB<0x4F)then if TB<0X00055 then if not(TB<82)then if not(TB>=0X53)then(Rt)[FB[1]]=pt[FB[0x3]];else if TB~=84 then local IE,bE=FB[0X1],(FB[0X3]);Pt=IE+bE-1;repeat local pG,xG=ET,Rt;if#pG>0X00 then local U2={};do for Lw,Rw in l,pG do for tM,MM in l,Rw do if MM[1]==xG and MM[0X2]>=0X0 then local l7=MM[2];if not(not U2[l7])then else(U2)[l7]={xG[l7]};end;MM[0x1]=U2[l7];(MM)[0X2]=0X01;end;end;end;end;end;until true;return true,IE,bE;else local rP=(FB[0X00001]);Rt[rP]=Rt[rP](Rt[rP+0X00001],Rt[rP+0x00002]);Pt=rP;end;end;else if not(TB<0X50)then if TB~=81 then(Rt)[FB[1]]=Rt[FB[3]]/Rt[FB[2]];else do if FB[2]==0X8D then it=it-1;rT[it]={[0X06]=0X3D,[0X1]=(FB[1]-0X9A),[3]=(FB[3]-154)};else do Rt[FB[0X001]]=-Rt[FB[0X3]];end;end;end;end;else(Rt)[FB[0X1]]=gs[FB[3]];end;end;else do if TB>=88 then do if TB<0X59 then do(Rt)[FB[1]]={p({},1,FB[0X3])};end;else if TB~=90 then if FB[2]==0x7C then it=it-0x1;(rT)[it]={[0X00003]=(FB[0X003]-0XD8),[1]=(FB[1]-216),[6]=33};elseif FB[0X002]~=159 then repeat local Jc,Ec,Qc=ET,Rt,FB[0x1];if not(#Jc>0x0)then else local Yr={};for Vn,hn in l,Jc do for f0,C0 in l,hn do do if C0[1]==Ec and C0[0x2]>=Qc then local yI=C0[0X02];if not Yr[yI]then(Yr)[yI]={Ec[yI]};end;(C0)[0X0001]=Yr[yI];C0[2]=0X01;end;end;end;end;end;until true;else it=it-1;do rT[it]={[0X3]=(FB[0x0003]-155),[0X6]=33,[0X1]=(FB[0x001]-155)};end;end;else repeat local IY,KY=ET,(Rt);if not(#IY>0x0)then else local jq=({});for Ti,qi in l,IY do for Se,Oe in l,qi do if not(Oe[0X001]==KY and Oe[2]>=0X0)then else local Rg=Oe[2];if not jq[Rg]then(jq)[Rg]={KY[Rg]};end;do Oe[1]=jq[Rg];end;(Oe)[2]=0X1;end;end;end;end;until true;local iM=FB[0x01];return false,iM,iM;end;end;end;else if not(TB>=0X56)then(Rt)[FB[1]]=M(Rt[FB[0X3]],Rt[FB[2]]);else do if TB~=87 then local i1=(FB[0X1]);Rt[i1](Rt[i1+0X0001]);Pt=i1-1;else(Rt)[FB[1]]=Rt[FB[0X3]]~=Rt[FB[0x2]];end;end;end;end;end;end;else if not(TB<0X049)then if not(TB<0X4C)then if TB<77 then(Rt)[FB[1]]=z(Rt[FB[0X00003]]);else if TB~=78 then(Rt)[FB[1]]=Rt[FB[3]]+Rt[FB[2]];else local Mu=FB[3];(Rt)[FB[0X0001]]=Rt[Mu]..Rt[Mu+0x1];end;end;else if not(TB>=0X4a)then if not(Rt[FB[0X3]]<Rt[FB[0x002]])then else it=FB[1];end;else do if TB~=0X004B then if FB[2]~=162 then do if not(not Rt[FB[1]])then else do it=FB[0X3];end;end;end;else it=it-0X1;(rT)[it]={[0X0003]=(FB[3]-0X2),[1]=(FB[1]-0X00002),[6]=61};end;else Pt=FB[1];Rt[Pt]=Rt[Pt]();end;end;end;end;else do if not(TB<0X46)then if not(TB<0X47)then if TB~=0X48 then Pt=FB[1];Rt[Pt]();Pt=Pt-1;else(Rt)[FB[0X1]]=true;end;else do(Rt)[FB[1]]=#Rt[FB[3]];end;end;else do if TB==69 then(Rt)[FB[1]]=lt[FB[4]];else do(Rt)[FB[1]]=Rt[FB[0X3]]%Rt[FB[2]];end;end;end;end;end;end;end;end;end;end;until false;end;end);if tt then if Dt then if at~=1 then return Rt[Et](p(Rt,Et+1,Pt));else return Rt[Et]();end;else if not(Et)then else return p(Rt,Et,at);end;end;else if Y(Dt)=="string"then if not(F(Dt,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;if F(Dt,'\^\046\045\058%\d+:\ ')then(y)("Luraph Script:"..(tT[it-0X001]or'\040\105\110\116\e\114n\097\l\)')..": "..g(Dt),0X00000);else y(Dt,0x00000);end;else y(Dt,0);end;end;end;R(LT,cT);do return LT;end;end;ks=0x2;continue;else do ks=1;end;end;end;end;local Ss,Hs=nil,(nil);do for yT=0,0x00004 do if not(yT<=0x00001)then if not(yT<=0X2)then if yT==0x3 then do Qs=nil;end;else return ys(Hs,nil,B)(...);end;else do gs[2]=Qs;end;end;else if yT~=0 then Hs=Ss();do continue;end;else function Ss()local AR,iR=0X00000,nil;repeat if AR~=0 then iR={};do break;end;else AR=1;continue;end;until(false);local LR,WR,yR,cR,HR=nil,nil,nil,nil,(nil);for w1=0,6 do do if w1<=0X0002 then do if not(w1<=0)then if w1~=0X001 then(LR)[14]=a();else WR=0X1;continue;end;else LR={{},Bs,{},Bs,Bs,{},Bs,Bs,Bs};continue;end;end;else if w1<=0x4 then if w1==3 then do yR={};end;else cR=LR[0X6];continue;end;else if w1==5 then do HR=a()-0X05C4e;end;continue;else do for qX=ls,HR do do cR[qX]={[0X3]="\O\_k\116s\098",[0x02]=O(),[4]=d(),[3]=as,[0x6]="\}\118Kh\052\U\(",[As]=d(),[0X0003]=O(),[0x0007]=d(),[1]=O(),[0X6]=o()};end;end;end;end;end;end;end;end;local bR=a();for C7=0X0001,bR do local J7=3;local P7,O7,A7=nil,nil,(nil);while J7<0X4 do do if not(J7<=0x01)then if J7==2 then O7=a();J7=0;else P7=a();do J7=0X2;end;end;else if J7~=0x0 then for qw=P7,O7 do(LR[es])[qw]=A7;end;J7=4;continue;else A7=a();J7=1;continue;end;end;end;end;end;LR[4]=o();AR=0x0004;local SR,aR=nil,(nil);repeat if AR<=0X1 then do if AR~=0x00 then do LR[5]=yR;end;AR=0X3;else LR[7]=w(SR,1,1)~=0X0000;do AR=0X2;end;end;end;else if AR<=2 then LR[9]=w(SR,2,ls)~=0;AR=0X00001;continue;else if AR~=3 then SR=d();do AR=0X0;end;else aR={};AR=5;continue;end;end;end;until AR>=5;do for vm=1,o()do(yR)[vm]={d(),o()};end;end;local uR=a()-0X0012D3;do AR=1;end;local UR,GR,fR=nil,nil,nil;while AR~=0X8 do do if not(AR<=0X3)then if not(AR<=0X005)then if AR==0X6 then LR[Ds]=o();do AR=0;end;continue;else LR[0x8]=o();AR=0X3;continue;end;else if AR~=4 then do fR=a()-26973;end;AR=8;else do for fa=1,uR do local Ia,Ga,Va,Sa=1,nil,nil,nil;repeat do if not(Ia<=0x0003)then do if not(Ia<=5)then do if Ia~=6 then Va=d();Ia=0x2;continue;else(aR)[WR]=Sa;Ia=5;end;end;else do if Ia~=0X4 then do WR=WR+0X0001;end;Ia=0X00003;do continue;end;else if Va==0X4E then Ga=S(Ks(UR),d());elseif Va==172 then Ga=S(Ks(UR),a());elseif Va==150 then Ga=a();elseif Va==205 then Ga=X();elseif Va==0X0000a3 then Ga=true;elseif Va==us then do Ga=X()+a();end;elseif Va==0X5F then Ga=S(Ks(UR),d());elseif Va==166 then Ga=false;elseif Va==0X0c8 then Ga=S(Ks(UR),2);elseif Va==135 then Ga=j();elseif Va==0X81 then Ga=X()+a();end;Ia=0X00;continue;end;end;end;end;else if not(Ia<=1)then do if Ia==2 then do iR[fa-ls]=WR;end;do Ia=0x4;end;continue;else if not(GR)then else local dL=0;do repeat if dL~=0x000 then Ys=Ys+0X1;break;else do(Qs)[Ys]=Sa;end;do dL=1;end;continue;end;until(false);end;end;break;end;end;else if Ia==0 then Sa={Ga,{}};Ia=6;else Ga=nil;Ia=0X7;do continue;end;end;end;end;end;until(false);end;end;AR=0X007;continue;end;end;elseif not(AR<=0X1)then if AR~=2 then LR[10]=d();AR=6;do continue;end;else GR=d()~=0;do AR=0X4;end;end;else do if AR==0 then for Jr=ls,HR do local Yr=LR[0X6][Jr];do for UK,XK in ipairs(t)do local NK,LK,rK=0X02,nil,(nil);while NK<=2 do do if not(NK<=0)then if NK==0X1 then if rK==0XC then local fp=iR[Yr[XK]];local mp=(aR[fp]);if not(mp)then else do(Yr)[LK]=mp[1];end;local Cq=mp[2];do Cq[#Cq+1]={Yr,LK};end;end;elseif rK==0Xb then(Yr)[XK]=Jr+Yr[XK]+1;end;NK=3;continue;else LK=f[XK];NK=0X0;end;else rK=Yr[LK];NK=0X1;continue;end;end;end;end;end;end;AR=5;continue;else UR=d();AR=2;continue;end;end;end;end;end;local MR=(LR[0X1]);for jm=0X0,fR-0X1 do MR[jm]=Ss();end;do return LR;end;end;do continue;end;end;end;end;end;end)(string.rep,4,select,tonumber,string.unpack,pcall,setmetatable,83,2,0X0003,5,string.sub,bit32,nil,52,false,string,coroutine.wrap,bit32.rshift,string.gsub,0x1,bit32.bxor,getfenv,error,assert,{0x7D96,2268570494,0X00409bc8ec,0X0DEeF6D1F,1203142970,494863720,3262825055,0xF9dc97ff,0X0653727cF},...);end;
