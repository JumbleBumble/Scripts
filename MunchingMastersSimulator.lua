

return(function(uy,My,Sy,py,ny,gy,cy,dy,my,fy,hy,Ly,by,Vy,Wy,ey,Jy,Ay,vy,ay,Dy,Zy,jy,zy,Oy,Cy,Py,sy,Qy,iy,Yy,ry,Xy,By,Uy,Gy,w,...)local N,Hy=select,(0X001);local E,V,K,D,q=pcall,bit32.bor,nil,nil,nil;for si=0,0X2 do do if not(si<=0)then if si==0X001 then do D=Uy;end;else q=Sy;continue;end;else K=hy;end;end;end;local Fy=(0X0001);local m,o=nil,nil;while true do if Fy~=0 then m=my.match;Fy=0X00;continue;else do o=My;end;break;end;end;Fy=0X00000;local F,l=nil,nil;repeat if Fy==0X0 then F=Xy;do Fy=0X1;end;continue;else l=dy;Fy=0X0002;end;until Fy>0X1;local S=(Oy);Fy=0X01;local M,d=nil,nil;while Fy<2 do do if Fy==0X0 then d=iy;Fy=2;else M=Cy;Fy=0X0000;continue;end;end;end;local X,h,i=setmetatable,nil,nil;local C,W=next,(coroutine.yield);local j=(setfenv);local P=Wy;for q0=0X0,0X00001 do do if q0==0 then do h=ny;end;continue;else do i=coroutine.wrap;end;do continue;end;end;end;end;local U=my.rep;local p=(D());Fy=1;local B,Y,R,u,z=nil,nil,nil,nil,nil;while Fy<6 do do if not(Fy<=0x2)then do if Fy<=3 then do R={[7]="\O",[0X9]=by,[Py]=2,[0X7]='\d\115\,a\/Z',[jy]=7,[0X5]=Dy,[0X4]=py,[1]=0.8772946008463379,[3]=zy,[0x00001]=0.5056890869663169,[7]=0X7,[1]=5,[0X5]=1,[0x8]=0X9};end;Fy=2;else if Fy==4 thendo Fy=3;end;else do Fy=0x4;end;end;end;end;else if not(Fy<=0X0000)then if Fy==1 then B={[0x0]=0x1};do Fy=0X5;end;else do Fy=0X0;end;do continue;end;end;else z=1;Fy=0x00006;end;end;end;end;Fy=1;local r,Q=nil,nil;repeat if Fy<=0X0000 then Y=S(l(Y,5),"..",function(NZ)if o(NZ,0x2)==72 then u=q(l(NZ,1,1));return"";else local bE,ME=1,(nil);while true do if bE~=0X0 then ME=h(q(NZ,0X00010));bE=0;continue;else if not(u)then return ME;else local ld=(0X0);local xd=nil;while 0.45084310562253216 do if ld<=0 then do xd=U(ME,u);end;do ld=2;end;continue;else do if ld~=1 then u=uy;ld=0X01;do continue;end;else return xd;end;end;end;end;end;break;end;end;end;end);Fy=2;continue;else if Fy~=0X1 then Q=function()local dt=o(Y,z,z);local Ft=(1);while'\041\Q\055\N'do if Ft~=0x0 then do z=z+1;end;do Ft=0;end;continue;else return dt;end;end;end;Fy=0X3;else do r=Yy.band;end;Fy=0;continue;end;end;until Fy==3;Fy=0;local G,e=nil,nil;while Fy<=0X01 do do if Fy==0 then do G=0X0080000000;end;Fy=1;else do e=0X100000000;end;Fy=2;continue;end;end;end;local H=(type);Fy=0X0;local J,Z=nil,(nil);repeat if Fy~=0X000 then Z=function()local k7,d7=P("<I4",Y,z);do z=d7;end;return k7;end;Fy=2;continue;else do J=2^0x34;end;Fy=1;continue;end;until Fy>=0X2;local c=G-1;local qy=(function(...)return N(Qy,...),{...};end);do local dX=(nil);do for k6=0x00,1 do if k6~=0 then do for zw=1,0X1f do local Aw=(0);repeat do if Aw~=0 then do dX=dX*0X2;end;do Aw=2;end;else B[zw]=dX;Aw=1;do continue;end;end;end;until Aw>1;end;end;continue;else do dX=0X02;end;do continue;end;end;end;end;end;local t=(assert);Fy=0;local A,f,a=nil,nil,nil;repeat do if not(Fy<=0X00)then do if Fy==0X1 then do a=Yy.bnot;end;break;else do f=Gy;end;Fy=1;continue;end;end;else A=function()local Js=0x0;local ds,ns=nil,nil;while-1376381920 do if not(Js<=0x0)then if Js==0X1 then return ds;else do z=ns;end;do Js=1;end;end;else ds,ns=P(Zy,Y,z);Js=2;continue;end;end;end;Fy=0X00002;do continue;end;end;end;until false;local T=(error);Fy=0;local g,L=nil,(nil);do while Fy<=0X1 do if Fy==0X0 then g=function(OB,BB,CB)local cB=((OB/B[BB])%B[CB]);cB=cB-cB%1;return cB;end;do Fy=0x0001;end;continue;else do L=function()local qB=(1);local WB,aB=nil,nil;repeat if qB<=0X00000 then return WB;else do if qB~=1 then do z=aB;end;qB=0X0;continue;else do WB,aB=P("<d",Y,z);end;qB=0X002;end;end;end;until false;end;end;Fy=2;end;end;end;local O=(rawset);do Fy=2;end;local s,k,x=nil,nil,nil;while"\C\I$07"do if Fy<=0 then k={Jy,0x6,1};Fy=0X01;continue;else if Fy~=0x0001 then do s=ey;end;Fy=0;else do x=function()local PV=(0);local cV=0;repeat local Jq=(o(Y,z,z));z=z+1;do cV=V(cV,s(r(Jq,0X7f),PV));end;if r(Jq,0x80)==0X0 then do return cV;end;end;do PV=PV+0X7;end;until false;end;end;break;end;end;end;local b=(vy);local v=e-1;local I=Q();local wy=(Q());Fy=2;local ty,Ny,Ey=nil,nil,nil;do while''do do if not(Fy<=0)then if Fy~=0X1 then ty=function(So)local ao,Fo,oo=1,nil,nil;repeat if ao~=0X0 then do Fo={o(Y,z,z+3)};end;ao=0;continue;else oo=f(Fo[0X1],wy);ao=2;end;until ao>=0x002;local Mo=f(Fo[0X2],wy);local po=f(Fo[3],wy);local Io=f(Fo[0X04],wy);do wy=(cy*wy+So)%0X00100;end;do for GE=0X0000,0X01 do if GE==0 then do z=z+0x4;end;continue;else return Io*16777216+po*65536+Mo*0X0100+oo;end;end;end;end;Fy=1;do continue;end;else do Ny=function(C1)local t1=(Z());local g1=(nil);local a1=0X0;repeat do if a1<=0X1 then do if a1~=0X0 then return g1;else g1="";do a1=2;end;end;end;else do if a1~=0x2 then z=z+t1;do a1=0X1;end;continue;else for iQ=0X1,t1,0X1F3D do local AQ,RQ,hQ=0x004,nil,nil;repeat do if AQ<=0X1 then if AQ==0X0 then do hQ={o(Y,z+iQ-By,z+RQ-1)};end;AQ=0X3;else if not(RQ>t1)then else RQ=t1;end;do AQ=0;end;end;else if AQ<=2 then g1=g1..h(b(hQ));break;else if AQ==3 then for UV=By,#hQ do local OV=0X0;do repeat if OV==0X000 then(hQ)[UV]=f(hQ[UV],I);OV=0x0001;continue;else do I=(C1*I+0xf1)%gy;end;break;end;until false;end;end;AQ=2;else RQ=iQ+7997-1;AQ=1;continue;end;end;end;end;until(false);end;a1=0X03;continue;end;end;end;end;until(false);end;end;Fy=0;end;else Ey={};break;end;end;end;end;local Ky={};local y=(function()local PO,tO=0X02,(nil);while 0.068691450434335 do if not(PO<=0X00000)then if PO~=1 then tO=x();PO=0;else return tO;end;else if tO>c then return tO-e;end;do PO=0X1;end;continue;end;end;end);Fy=0X4;local Ty,ly,oy=nil,nil,nil;repeat do if Fy<=1 then if Fy~=0 then oy=ly();do Fy=0;end;else do Ky[2]=Ey;end;Fy=0X2;continue;end;else if not(Fy<=2)then if Fy~=3 then function Ty(Iy,Ry,yy)local yv=yy[0x2];local cv=yy[0X1];local xy=(yy[3]);local ky,Zv,Vv=yy[5],yy[9],yy[0X6];local rv=(yy[0X4]);local Wv=(yy[0x008]);local qv=(X({},{__mode="v"}));local Iv=nil;Iv=function(...)local oX=1;local yX={};local eX=D();local BX=({[0X002]=yy,[1]=yX});local AX=((eX==p and Iy or eX));local gX,mX=qy(...);local HX=(0);do gX=gX-0X001;end;for yQ=0,gX do do if not(Zv>yQ)then do break;end;else do(yX)[yQ]=mX[yQ+1];end;end;end;end;if not Wv then mX=nil;elseif not(yv)then else(yX)[Zv]={n=gX>=Zv and gX-Zv+1 or 0X000,b(mX,Zv+1,gX+0x1)};end;if AX==eX then else(j)(Iv,AX);end;local WX,kX,RX,CX=E(function()while true do local eY=(xy[oX]);local WY=eY[7];do oX=oX+0x1;end;do if WY>=46 then if not(WY<0x045)then do if WY<81 then if WY>=75 then if not(WY<0X4e)then if WY>=79 then if WY~=80 then do if not yX[eY[0x6]]then oX=eY[1];end;end;else(yX)[eY[6]]=yX[eY[1]]%yX[eY[0X3]];end;else yX[eY[0X06]]=V(yX[eY[1]],yX[eY[3]]);end;else if WY>=0X4c then if WY~=0X4d then if eY[0X3]==30 then oX=oX-1;do xy[oX]={[0X0001]=(eY[0X1]-55),[0X0007]=32,[0X6]=(eY[6]-0x37)};end;elseif eY[0x03]==181 then do oX=oX-1;end;(xy)[oX]={[7]=0x46,[6]=(eY[0X6]-192),[1]=(eY[0X1]-0XC0)};else do repeat local Px,ux=qv,(yX);do if not(#Px>0)then else local fv={};for yL,HL in C,Px do for kz,qz in C,HL do if qz[1]==ux and qz[0X2]>=0 then local hf=qz[2];do if not fv[hf]then do fv[hf]={ux[hf]};end;end;end;(qz)[0X1]=fv[hf];do(qz)[0X2]=1;end;end;end;end;end;end;until true;end;return false,eY[6],HX;end;else local PH=(eY[0X6]);yX[PH]=yX[PH](b(yX,PH+1,HX));HX=PH;end;else if eY[0X003]==0Xa2 then oX=oX-1;do(xy)[oX]={[7]=0X007,[6]=(eY[6]-27),[1]=(eY[0X1]-27)};end;elseif eY[3]~=0X9f then(yX)[eY[6]]=nil;else do oX=oX-0x1;end;(xy)[oX]={[0X6]=(eY[6]-129),[0X07]=42,[1]=(eY[1]-0X81)};end;end;end;else if not(WY>=0X48)then if WY>=0X46 then do if WY~=0X47 then repeat local we,He=qv,yX;if#we>0 then local Ow={};do for DA,PA in C,we do for Kq,Fq in C,PA do if not(Fq[1]==He and Fq[2]>=0x00)then else local xP=Fq[0x0002];if not Ow[xP]then do Ow[xP]={He[xP]};end;end;(Fq)[0X1]=Ow[xP];(Fq)[2]=0X1;end;end;end;end;end;until true;local wd=eY[0X6];return false,wd,wd+eY[0X1]-0X2;else(yX)[eY[6]]=yX[eY[1]]==yX[eY[3]];end;end;else local hc=(eY[6]);local Xc=i(function(...)W();for JA,IA in...do W(true,JA,IA);end;end);(Xc)(yX[hc],yX[hc+0X1],yX[hc+0X2]);HX=hc;(yX)[hc]=Xc;do oX=eY[0X1];end;end;else if WY<0X49 then local Uh=eY[6];HX=Uh+eY[0X01]-0X1;(yX[Uh])(b(yX,Uh+1,HX));HX=Uh-1;else if WY==0X4A then local ga=(eY[6]);yX[ga]=yX[ga](yX[ga+1]);HX=ga;else(yX)[eY[0X6]]=BX[eY[1]];end;end;end;end;else if WY<87 then do if not(WY<0X54)then if WY>=85 then do if WY==0X000056 then(yX[eY[0X00006]])[yX[eY[1]]]=eY[0X4];else yX[eY[0X6]]=yX[eY[0x00001]]*yX[eY[0x3]];end;end;else(yX)[eY[0x06]]=true;end;else do if WY<82 then local nk=eY[6];yX[nk](b(yX,nk+0X1,HX));HX=nk-1;else if WY==0X53 then repeat local eh,Kh=qv,yX;if#eh>0 then local EG=({});for s1,k1 in C,eh do for LB,eB in C,k1 do if not(eB[1]==Kh and eB[0X2]>=0)then else local NE=(eB[0X2]);do if not(not EG[NE])then else EG[NE]={Kh[NE]};end;end;(eB)[1]=EG[NE];(eB)[0x0002]=0X00001;end;end;end;end;until true;return true,eY[0X006],0X000;else yX[eY[0x6]]=eY[5];end;end;end;end;end;else if WY>=0x05a then if not(WY<91)then do if WY==92 then do(yX)[eY[0X6]]=yX[eY[1]]/yX[eY[3]];end;else if eY[3]==0x00d9 then oX=oX-1;do xy[oX]={[0X6]=(eY[6]-0X00002E),[1]=(eY[1]-46),[0X07]=75};end;else local Gu=eY[6];for rf=Gu,Gu+(eY[1]-0x1)do(yX)[rf]=mX[Zv+(rf-Gu)+1];end;end;end;end;else(yX)[eY[0x6]]=yX[eY[0X001]]<yX[eY[3]];end;else if WY>=0X58 then do if WY~=0x00059 then local f9=yX[eY[1]]/yX[eY[3]];(yX)[eY[6]]=f9-f9%1;else(yX)[eY[0X6]]=yX[eY[0X1]]^yX[eY[0X00003]];end;end;else local PW=(eY[0X6]);yX[PW](yX[PW+1],yX[PW+2]);HX=PW-0X1;end;end;end;end;end;else if WY<57 then do if WY>=0X00033 then if not(WY<54)then do if not(WY>=0X37)then(yX[eY[6]])[yX[eY[0X0001]]]=yX[eY[3]];else if WY==56 then local ep=(eY[0X6]);local Tp,jp=yX[ep]();if not(Tp)then else do for l3=1,eY[0X3]do do yX[ep+l3]=jp[l3];end;end;end;oX=eY[0X1];end;else local sh=(ky[eY[1]]);local Eh=(nil);local Ch=(sh[7]);local oh=(#Ch);do if not(oh>0)then else Eh={};for NF=0X1,oh do local qF=(Ch[NF]);if qF[0X1]==0 then Eh[NF-1]={yX,qF[0X2]};else Eh[NF-1]=Ry[qF[0x002]];end;end;(M)(qv,Eh);end;end;do yX[eY[6]]=Ty(AX,Eh,sh);end;end;end;end;else if WY<52 then local Rl=eY[0X1];yX[eY[6]]=yX[Rl]..yX[Rl+0x0001];else do if WY==0X35 then(BX)[eY[0x1]]=yX[eY[6]];else(yX)[eY[0X6]]=yX[eY[0X1]]~=yX[eY[0X3]];end;end;end;end;else if WY>=0X30 then if not(WY<0X31)then if WY~=0x32 then do yX[eY[6]]=yX[eY[0x0001]]+yX[eY[3]];end;else do HX=eY[0x6];end;(yX[HX])();HX=HX-1;end;else local Cn=Ry[eY[0x1]];do(yX)[eY[0x06]]=Cn[0X1][Cn[2]];end;end;else if WY~=0x002f then local od=eY[6];local Vd,Fd,vd=yX[od]();if not(Vd)then else(yX)[od+1]=Fd;(yX)[od+2]=vd;do oX=eY[1];end;end;else local qL=eY[0X0006];local cL=i(function(...)W();for l3,m3,e3,o3,C3,W3,u3,P3,h3,r3 in...do(W)(true,{l3,m3,e3,o3,C3,W3,u3,P3,h3,r3});end;end);cL(yX[qL],yX[qL+1],yX[qL+2]);HX=qL;yX[qL]=cL;oX=eY[0X1];end;end;end;end;else do if not(WY>=0x3f)then do if WY<60 then if not(WY>=58)then local Ah=(eY[1]);local oh=(yX[Ah]);for ei=Ah+1,eY[0X3]do oh=oh..yX[ei];end;(yX)[eY[6]]=oh;else do if WY~=0X3B then yX[eY[0X6]]=yX[eY[1]]>=yX[eY[0X3]];else do(yX)[eY[0x06]]=yX[eY[0X1]][yX[eY[0x3]]];end;end;end;end;else if not(WY<0X3D)then if WY==62 then if eY[3]==124 then oX=oX-1;do xy[oX]={[7]=42,[0X6]=(eY[0X6]-0X0009E),[0x1]=(eY[0X1]-158)};end;else repeat local UO,HO=qv,yX;if#UO>0X00 then local yh=({});do for Pf,wf in C,UO do for a1,G1 in C,wf do if not(G1[0x1]==HO and G1[2]>=0X0)then else local a0=(G1[0x2]);if not(not yh[a0])then else do(yh)[a0]={HO[a0]};end;end;G1[0X1]=yh[a0];do(G1)[2]=1;end;end;end;end;end;end;until true;return;end;else local qd=(eY[6]);local pd=i(function(...)W();do for cL in...do(W)(true,cL);end;end;end);pd(yX[qd],yX[qd+1],yX[qd+0X02]);HX=qd;do(yX)[qd]=pd;end;oX=eY[0x0001];end;else yX[eY[0X00006]]=yX[eY[0x1]]%eY[0x4];end;end;end;else do if WY>=66 then do if WY<67 then yX[eY[6]]=yX[eY[1]]-yX[eY[0X3]];else if WY~=0X044 then yX[eY[6]]=yX[eY[1]]~=eY[0x00004];else do(yX)[eY[0X6]]=yX[eY[0x1]]<=yX[eY[0X03]];end;end;end;end;else if not(WY>=64)then if eY[0X3]~=0X66 then yX[eY[6]]=-yX[eY[0X1]];else do oX=oX-1;end;xy[oX]={[7]=0X003e,[0X1]=(eY[0X1]-18),[0X0006]=(eY[0X6]-0x12)};end;else if WY~=0x000041 then do yX[eY[0x6]]=a(yX[eY[0X1]]);end;else(yX)[eY[6]]={b({},1,eY[1])};end;end;end;end;end;end;end;end;else if not(WY<23)then if WY<0x000022 then if not(WY<28)then if not(WY<0X1f)then if WY>=32 then if WY==0x021 then local kU=eY[0X6];local QU,VU=yX[kU]();do if QU then oX=eY[0X00001];(yX)[kU+3]=VU;end;end;else(yX)[eY[0X0006]]=#yX[eY[1]];end;else local xb=eY[0X6];local Gb,Yb=yX[xb]();if Gb then do(yX)[xb+0x01]=Yb;end;do oX=eY[0X1];end;end;end;else if not(WY>=0x00001D)then(yX)[eY[6]]=yX[eY[0X0001]][eY[0X4]];else if WY==0X1E then(yX[eY[6]])[eY[0X05]]=eY[0X4];else local lw,Aw=eY[0X006],eY[0X0001];HX=lw+Aw-1;do repeat local Ip,np=qv,yX;if#Ip>0X000 then local l1={};for Yt,Ht in C,Ip do for S2,r2 in C,Ht do if r2[0X1]==np and r2[2]>=0x0 then local pU=r2[0x2];do if not(not l1[pU])then else l1[pU]={np[pU]};end;end;do(r2)[0X1]=l1[pU];end;r2[0X002]=1;end;end;end;end;until true;end;do return true,lw,Aw;end;end;end;end;else if WY<0x19 then if WY~=0X18 then do(AX)[eY[0X5]]=yX[eY[0X6]];end;else if yX[eY[1]]==eY[4]then oX=eY[6];end;end;else do if WY<0x1a then yX[eY[6]]=AX[eY[5]];else if WY~=0X1b then if not(not(yX[eY[1]]<=eY[4]))then else oX=eY[6];end;else if not(not(yX[eY[0X1]]<yX[eY[3]]))then else oX=eY[6];end;end;end;end;end;end;else if WY>=40 then do if WY>=43 then if not(WY>=0X2C)then local tj=(eY[0X00006]);local zj=(yX[tj+0X2]);local Dj=yX[tj];local sj=yX[tj+1];(yX)[tj]=i(function()for aC=Dj,sj,zj do W(true,aC);end;end);oX=eY[1];else if WY==45 then do(yX)[eY[0x6]]=f(yX[eY[0x1]],yX[eY[3]]);end;else if yX[eY[0X0001]]<=yX[eY[0X0003]]then do oX=eY[6];end;end;end;end;else if not(WY<0X29)then if WY~=0X2a then if yX[eY[1]]~=yX[eY[0X3]]then else oX=eY[0X006];end;else if eY[3]==129 then oX=oX-1;xy[oX]={[0X7]=0x03E,[1]=(eY[0x1]-124),[0x6]=(eY[6]-0X7C)};else yX[eY[6]]=not yX[eY[0X0001]];end;end;else local qC=(eY[0X6]);local vC,tC=yX[qC],(eY[0X3]-1)*50;do for mt=1,eY[0x00001]do do(vC)[tC+mt]=yX[qC+mt];end;end;end;end;end;end;else if not(WY>=37)then if not(WY<0X00023)then if WY~=0X24 then yX[eY[6]]=false;else yX[eY[0x00006]]=Ky[eY[1]];end;else(Ky)[eY[1]]=yX[eY[0x6]];end;else if WY<38 then yX[eY[0X6]]=yX[eY[1]]>yX[eY[0X00003]];else if WY==0X027 then yX[eY[6]]=r(yX[eY[1]],yX[eY[3]]);else do(yX[eY[0X006]])[eY[5]]=yX[eY[3]];end;end;end;end;end;end;else if WY<0x000B then if WY<5 then do if WY>=0X2 then if not(WY<0X00003)then if WY==4 then if yX[eY[1]]==yX[eY[3]]then else oX=eY[6];end;else(yX)[eY[6]]=F(yX[eY[1]],yX[eY[0X3]]);end;else local lR=(eY[0x06]);local SR=((eY[3]-0X001)*50);local HR=(yX[lR]);do for lE=1,HX-lR do do HR[SR+lE]=yX[lR+lE];end;end;end;end;else do if WY~=1 then repeat local tQ,hQ,IQ=qv,yX,(eY[6]);if not(#tQ>0)then else local Px={};for lU,AU in C,tQ do do for hF,KF in C,AU do if KF[0X1]==hQ and KF[2]>=IQ then local Ef=(KF[0X2]);do if not Px[Ef]then(Px)[Ef]={hQ[Ef]};end;end;KF[0X001]=Px[Ef];(KF)[0X2]=0x0001;end;end;end;end;end;until true;else repeat local r9,p9=qv,(yX);if not(#r9>0X0)then else local Aq=({});for XX,TX in C,r9 do for d8,o8 in C,TX do if o8[1]==p9 and o8[0x2]>=0 then local oz=o8[0X2];if not(not Aq[oz])then else(Aq)[oz]={p9[oz]};end;o8[0x1]=Aq[oz];do o8[0x002]=0X1;end;end;end;end;end;until true;do return true,eY[6],0X1;end;end;end;end;end;else if WY>=8 then do if WY>=9 then if WY~=10 then local IY=(Ry[eY[1]]);IY[1][IY[2]]=yX[eY[0X6]];else local Xd=eY[0X6];local nd,ad=eY[1],(eY[0X03]);do if nd~=0X0 then HX=Xd+nd-0X001;end;end;local Ad,qd=nil,(nil);if nd~=1 then Ad,qd=qy(yX[Xd](b(yX,Xd+1,HX)));else Ad,qd=qy(yX[Xd]());end;if ad~=0X1 then if ad~=0 then do Ad=Xd+ad-0X2;end;do HX=Ad+1;end;else Ad=Ad+Xd-1;HX=Ad;end;local ho=(0X00);do for bz=Xd,Ad do ho=ho+1;(yX)[bz]=qd[ho];end;end;else HX=Xd-1;end;end;else local we=eY[0X0006];(yX[we])(yX[we+1]);HX=we-0x1;end;end;else if WY>=6 then do if WY==7 then if eY[3]~=0x000029 then(yX)[eY[6]]=yX[eY[1]];else do oX=oX-1;end;xy[oX]={[0x0007]=22,[0X1]=(eY[1]-68),[0X6]=(eY[6]-68)};end;else do yX[eY[0X06]]=eY[5];end;end;end;else oX=eY[0X1];end;end;end;else if WY<0X00011 then if WY>=14 then if not(WY>=15)then for kv=eY[6],eY[0x001]do(yX)[kv]=nil;end;else do if WY~=16 then if not(yX[eY[0X001]]<=yX[eY[3]])then oX=eY[6];end;else HX=eY[6];do(yX)[HX]=yX[HX]();end;end;end;end;else do if WY>=12 then do if WY~=13 then local KV=eY[6];local XV=(yX[eY[0X1]]);yX[KV+1]=XV;(yX)[KV]=XV[eY[4]];else if eY[0X3]==0X37 then oX=oX-1;(xy)[oX]={[0x001]=(eY[0X1]-43),[0X7]=0X20,[0X6]=(eY[6]-43)};else if yX[eY[6]]then oX=eY[1];end;end;end;end;else do(yX)[eY[0X6]]={};end;end;end;end;else do if WY>=0X0014 then if not(WY>=21)then local vP=(eY[0X6]);HX=vP+eY[0X00001]-1;(yX)[vP]=yX[vP](b(yX,vP+1,HX));do HX=vP;end;else if WY==22 then if eY[0x3]==0Xcb then do oX=oX-0X1;end;(xy)[oX]={[7]=0X7,[0x6]=(eY[0X6]-181),[1]=(eY[1]-181)};else local T9=(eY[6]);local h9=(gX-Zv);if h9<0X0 then do h9=-0x1;end;end;for Uh=T9,T9+h9 do(yX)[Uh]=mX[Zv+(Uh-T9)+1];end;HX=T9+h9;end;else if yX[eY[0X1]]~=eY[0X004]then oX=eY[6];end;end;end;else if not(WY<0x00012)then if WY~=0X13 then if eY[3]==88 then oX=oX-0X0001;do(xy)[oX]={[7]=0X7,[0X6]=(eY[0X0006]-116),[0X0001]=(eY[0X1]-116)};end;elseif eY[0X3]==141 then oX=oX-1;(xy)[oX]={[6]=(eY[6]-0Xdb),[1]=(eY[0x1]-0Xdb),[0X7]=0X02a};else repeat local df,Ef=qv,(yX);if#df>0 then local Er={};do for x5,H5 in C,df do for tp,kp in C,H5 do if not(kp[1]==Ef and kp[0X002]>=0)then else local k6=(kp[2]);if not Er[k6]then Er[k6]={Ef[k6]};end;do kp[0X00001]=Er[k6];end;do(kp)[0x2]=0X1;end;end;end;end;end;end;until true;local O6=eY[0x6];return false,O6,O6;end;else local VX=eY[0X6];(yX)[VX]=yX[VX](yX[VX+0X1],yX[VX+0X002]);HX=VX;end;else do if not(yX[eY[1]]<yX[eY[0X3]])then else oX=eY[0X6];end;end;end;end;end;end;end;end;end;end;end;end);if WX then if kX then if CX~=1 then return yX[RX](b(yX,RX+0X1,HX));else do return yX[RX]();end;end;elseif not(RX)then else return b(yX,RX,CX);end;else if H(kX)~="\s\116\114\in\g"then(T)(kX,0X00000);else do if not(m(kX,"attempt to yield across metamethod/C%-call boundary"))then else return coroutine.yield();end;end;do if m(kX,"\^\046\-\058%\d\043\058\ ")then T("Luraph Script:"..(rv[oX-1]or"(internal)")..": "..K(kX),0x00);else(T)(kX,0);end;end;end;end;end;j(Iv,Iy);do return Iv;end;end;Fy=3;do continue;end;else function ly()local M5=nil;local t5,f5={},({nil,uy,{},{},{},uy,uy,uy,nil});local i5={};local o5=0X3;local B5=1;do repeat do if o5<=0x4 then if o5<=1 then if o5~=0 then M5=Q();o5=0X0006;else for XK=1,x()do t5[XK]={Q(),x()};end;do o5=5;end;continue;end;else do if not(o5<=2)then if o5~=3 then(f5)[0x2]=g(M5,2,0x00001)~=0;o5=0xB;else do(f5)[16]=Q();end;o5=2;continue;end;else(f5)[Ay]=Q();o5=9;end;end;end;else if o5<=0X0007 then if o5<=5 then do f5[0x11]=Q();end;o5=0X8;else if o5==0X00006 then f5[0x008]=g(M5,0X01,1)~=0x00000;o5=0X4;else(f5)[0X6]=x();o5=0xa;continue;end;end;else if not(o5<=8)then if o5==0X9 then(f5)[0X00007]=t5;o5=0;continue;else do(f5)[0X1]=x();end;o5=1;end;else f5[0X13]=Z();o5=0x7;end;end;end;end;until o5>10;end;local r5=Z();do for Pi=0X1,r5 do local Ti,ai,ei,vi=0X2,nil,nil,(nil);while Ti~=0X4 do if Ti<=0X1 then do if Ti~=0 then vi=Z();do Ti=3;end;else ei=Z();do Ti=0X0001;end;end;end;else if Ti~=0X0002 then for SQ=ai,ei do f5[0X4][SQ]=vi;end;Ti=0X4;continue;else do ai=Z();end;Ti=0X0;end;end;end;end;end;o5=0x1;local x5,Y5=nil,nil;do repeat if o5==0 then Y5=f5[3];break;else do x5=Z()-4593;end;do o5=0X0;end;end;until(false);end;o5=0X3;local C5,D5=nil,(nil);repeat if not(o5<=2)then if o5<=0X003 then C5=f5[5];do o5=0X01;end;continue;else if o5==0X4 then D5=Z()-Vy;do o5=2;end;do continue;end;else(f5)[0x0c]=Z();o5=0;end;end;else if o5<=0 then(f5)[9]=x();break;else if o5==1 then for RB=0x1,x5 do Y5[RB]={[3]='(\103\096>',[5]=Ly,[1]=0.9133187876337517,[2]=Q(),[0X4]=-0x4B1E6D4d,[0X001]=-0X00017930C3b,[fy]="\L\)\042\049\{\075",[0X03]=y(),[4]=Q(),[5]=Q(),[1]=y(),[0x6]=y(),[ry]=x()};end;do o5=4;end;continue;else for PU=ay,D5-1 do C5[PU]=ly();end;o5=0X5;continue;end;end;end;until(false);do o5=2;end;local X5,F5,d5=nil,nil,(nil);while o5<=0X2 do if o5<=0 then d5=Q();o5=3;do continue;end;else if o5==1 then F5=Z()-21898;do o5=0;end;do continue;end;else do X5={};end;do o5=0x01;end;continue;end;end;end;do o5=4;end;local I5=(nil);repeat if not(o5<=0X00001)then if o5<=2 then return f5;else if o5==3 then for lP=0X1,F5 do local kP,VP,KP=1,nil,(nil);repeat if kP~=0X00000 then VP=uy;kP=0X0;continue;else KP=Q();kP=0X00002;do continue;end;end;until kP>1;kP=0x1;while kP<=1 do if kP==0 then do if KP==34 then VP=A();elseif KP==0X3c then VP=l(Ny(d5),4);elseif KP==0X47 then VP=true;elseif KP==37 then VP=L();elseif KP==250 then VP=false;elseif KP==0X5f then VP=A();elseif KP==sy then do VP=l(Ny(d5),7);end;elseif KP==17 then VP=L();elseif KP==0x6B then VP=A();end;end;kP=0X00002;else i5[lP-0X1]=B5;do kP=0X0;end;end;end;local dP={VP,{}};do X5[B5]=dP;end;B5=B5+0X1;do if not(I5)then else do Ey[Hy]=dP;end;Hy=Hy+1;end;end;end;o5=0X001;else I5=Q()~=0;o5=3;end;end;else if o5==0 then(f5)[0XD]=Z();do o5=2;end;continue;else for P6=0x1,x5 do local Q6=(f5[3][P6]);for Vc,Dc in ipairs(k)do local ec,Cc,Ec=0X0,nil,(nil);do while(true)do if not(ec<=0)then if ec~=1 then Ec=Q6[Cc];ec=1;continue;else if Ec==0X0a then local M2=(1);local R2,K2=nil,(nil);do while(true)do do if M2<=0X0 then if not(K2)then else(Q6)[Cc]=K2[0x0001];local w4=(K2[2]);(w4)[#w4+0X1]={Q6,Cc};end;break;else if M2==0X1 then R2=i5[Q6[Dc]];M2=0X2;do continue;end;else K2=X5[R2];do M2=0X0;end;end;end;end;end;end;elseif Ec~=By then else Q6[Dc]=P6+Q6[Dc]+0X01;end;break;end;else Cc=R[Dc];ec=0X02;end;end;end;end;end;do o5=0;end;end;end;until(false);end;Fy=1;do continue;end;end;else Ey=uy;Fy=5;end;end;end;until Fy==5;do return Ty(p,uy,oy)(...);end;end)(nil,string.byte,tonumber,0x8,string.char,0X100,0Xd,string.sub,string,0x5,tostring,true,false,31507,string.unpack,bit32.lshift,0X03,19,unpack,0X00,-309667527,"\060i8",9,4,string.gsub,table.insert,6,118,"#",rawget,bit32,7,bit32.rshift,0X01,getfenv,bit32.bxor,{0X9a57,3321474951,0XC5d309fb,0x25583ae4,4151934048,0X00011E3DA30,0XaB0d3dD6,2517152965,1374400050},...);
